---
title: "DANL 200: Introduction to Data Analytics<br>Homework Assignment 2"
author: "Byeong-Hak Choe"
editor: visual
---

```{r setup, include = F}
library(tidyverse)
library(gapminder)
library(skimr)   # a better summary of data.frame
library(scales)  # scales for ggplot
library(ggthemes)  # additional ggplot themes
library(hrbrthemes) # additional ggplot themes and color pallets
library(lubridate)
library(ggridges)
theme_set(theme_minimal()) # setting the minimal theme for ggplot
# setting default chunk options
knitr::opts_chunk$set(
	eval = T,
	echo = T,
	message = FALSE,
	warning = FALSE
)
```

Load R packages you need for Homework Assignment 2

```{r}
library(tidyverse)
library(skimr)
```

# Question 1

Load the DataFrfame for Question 1.

```{r, eval = T, echo = T, message=F, warning=F}
path <- 'https://bcdanl.github.io/data/GHG_emissions_by.csv'
ghg_emissions <- read_csv(path)
```

```{r, result = 'asis', echo = F, message = F, warning = F}
rmarkdown::paged_table(ghg_emissions) 
```

- LULUCF stands for Land Use, Land-Use Change and Forestry.


## Q1a

Provide both ggplot code and a simple comment to describe the yearly trend of GHG emissions for each sector.

- Here we can consider the yearly total GHG emissions for each sector:

```{r, eval = F, echo = T}
ghg_emissions %>% 
  group_by(Sector, Year) %>% # Group by sector and year
  summarise(GHG_emissions = sum(GHG_emissions, na.rm = T)) %>% # Sum GHG emissions for each sector and year
  ggplot(aes(x = Year, y = GHG_emissions)) + # Create ggplot with Year on x-axis and GHG emissions on y-axis
  geom_line(aes(color = Sector)) + # Add a line for each sector with a different color
  geom_point(color = 'black', size = .25) # Add black points for each year

```

```{r, eval = T, echo = F}
ghg_emissions %>% 
  group_by(Sector, Year) %>% 
  summarise(GHG_emissions = sum(GHG_emissions, na.rm = T)) %>% 
  ggplot(aes(x = Year, y = GHG_emissions)) +
  geom_line(aes(color = Sector)) +
  geom_point(color = 'black', size = .25) +
  theme(legend.position = 'top') +
  guides(color = guide_legend(nrow = 2)) +
  facet_wrap(.~ Sector, scales = 'free_y')
```

- `scales = 'free_y'` allows the scale of `y`-axis to vary by subplots.
- `scales = 'free_x'` allows the scale of `x`-axis to vary by subplots.
- `scales = 'free'` allows the scale of both `x`-axis and `y`-axis to vary by subplots.



<br><br>

## Q1b

Provide both ggplot code and a simple comment to describe the yearly trend of United States of America's GHG emissions for each sector.

```{r, eval = F, echo = T}
ghg_emissions %>% 
  filter(Party == "United States of America") %>% 
  ggplot(aes(x = Year, y = GHG_emissions)) +
  geom_line(aes(color = Sector)) +
  geom_point(color = 'black', size = .25) +
  facet_wrap(.~ Sector, scales = 'free_y')
```

```{r, eval = T, echo = F}
ghg_emissions %>% 
  filter(Party == "United States of America") %>% 
  ggplot(aes(x = Year, y = GHG_emissions)) +
  geom_line(aes(color = Sector)) +
  geom_point(color = 'black', size = .25) +
  theme(legend.position = 'top') +
  guides(color = guide_legend(nrow = 2)) +
  facet_wrap(.~ Sector, scales = 'free_y')
```

<br><br>

## Q1c

For each party, calculate the yearly percentage change in GHG emissions for each sector.

```{r}
q1c <- ghg_emissions %>% 
  group_by(Party, Sector) %>% 
  # Calculate percentage change between consecutive years
  mutate(pct = (GHG_emissions - lag(GHG_emissions)) / abs(lag(GHG_emissions)),
         # Round the percentage change to 2 decimal places
         pct2 = round(100 * pct, 2) )

q1c
```

<br><br>

## Q1d

Which party has reduced GHG emissions most from 1990 level to 2017 level in terms of the percentage change in GHG emissions?

```{r}
q1d <- ghg_emissions %>% 
  filter(Year %in% c(1990, 2017)) %>% 
  group_by(Party, Year) %>% 
  summarize(GHG_emissions = sum(GHG_emissions, na.rm = T)) %>% 
  group_by(Party) %>%  # this group_by() is not necessary
  mutate(pct = (GHG_emissions - lag(GHG_emissions)) / abs(lag(GHG_emissions)) ) %>% 
  arrange(-pct)
q1d
```

<br><br>

## Q1e

Which sector has reduced GHG emissions most from 1990 level to 2017 level in terms of the percentage change in GHG emissions?

```{r}
q1e <- ghg_emissions %>% 
  filter(Year %in% c(1990, 2017)) %>% 
  group_by(Sector, Year) %>% 
  summarize(GHG_emissions = sum(GHG_emissions, na.rm = T)) %>% 
  group_by(Sector) %>%  # this group_by() is not necessary
  mutate(pct = (GHG_emissions - lag(GHG_emissions)) / abs(lag(GHG_emissions)) ) %>% 
  arrange(-pct)
q1e
```

<br><br><br>

# Question 2

Load the DataFrfame for Question 2.

```{r}
path <- 'https://bcdanl.github.io/data/climate_finance.csv'
climate_finance <- read_csv(path)
```

```{r, result = 'asis', echo = F, message = F, warning = F}
rmarkdown::paged_table(climate_finance) 
```

- Adaptation involves taking actions to reduce the actual or expected damages from climate change. 

- Mitigation involves taking actions to reduce the emissions of greenhouse gases that are responsible for climate change.

## Q2a

How many `parties` have `provided` or `disbursed` positive funding `contributions` to other countries or regions for their `adaptation` projects for every single `year` from 2011 to 2018?

```{r}
q2a <- climate_finance %>% 
  filter(Status == "provided" | Status == "disbursed",  # filter by provided or disbursed status
         `Type of support` == "adaptation") %>%       # filter by adaptation type
  group_by(Party, Year) %>%                          # group by Party and Year
  summarise(Contribution = sum(Contribution, na.rm = T)) %>%  # calculate total contribution
  filter(Contribution > 0) %>%                       # keep rows with non-zero contribution
  group_by(Party) %>%                                # group by Party (unnecessary step)
  count() %>%                                        # count number of observations
  filter(n == 8)                                     # keep Parties with 8 observations

q2a
nrow(q2a)
```

<br><br>

## Q2b

For each `party`, calculate the total funding `contributions` that were `disbursed` or `provided` for `mitigation` projects for each `year`.

```{r}
q2b <- climate_finance %>% 
  filter(Status == "provided" | Status == "disbursed",
         `Type of support` == "mitigation") %>% 
  group_by(Party, Year) %>% 
  summarise(Contribution = sum(Contribution, na.rm = T))
q2b
```

<br><br>

## Q2c

For each `party`, calculate the ratio between `adaptation` contribution and `mitigation` contribution for each type of `Status` for each `year`.

```{r}
q2c <- climate_finance %>% 
  group_by(Party, Year, Status, `Type of support`) %>% 
  summarise(Contribution = sum(Contribution, na.rm = T)) %>% 
  filter(Contribution != 0) %>% 
  group_by(Party, Year, Status) %>% # this group_by() is not necessary, but it doesn't hurt
  mutate(lag_Contribution = lag(Contribution), # calculate lagged Contribution
         am_ratio = lag_Contribution / Contribution ) %>% # calculate adaptation/mitigation ratio
  filter(!is.na(am_ratio)) %>% # remove rows with missing values in am_ratio
  rename(mitigation = Contribution, # rename columns for clarity
         adaptation = lag_Contribution) %>% 
  select(-`Type of support`) # remove Type of support column

  
q2c
```

-   Here is another example:

```{r}
q2c <- climate_finance %>% 
  group_by(Party, Year, Status) %>%  # group by Party, Year and Status
  summarise(adaptation = sum(Contribution[`Type of support` == 'adaptation'], na.rm = T), # sum the contributions where the Type of support is adaptation
            mitigation = sum(Contribution[`Type of support` == 'mitigation'], na.rm = T) # sum the contributions where the Type of support is mitigation
            ) %>% 
  filter(adaptation != 0, mitigation != 0) %>% # filter out rows where either adaptation or mitigation is 0
  mutate(am_ratio = adaptation / mitigation ) # calculate the ratio of adaptation to mitigation and store it in a new column named am_ratio

  
q2c
```

<br><br>

## Q2d

Provide both ggplot code and a simple comment to describe the distribution of the ratio between `adaptation` contribution and `mitigation` contribution, which is calculated in Q2c.

```{r}
ggplot(q2c, aes(x = am_ratio)) +
  geom_histogram(bins = 100) +
  geom_vline(xintercept = 1, color = 'red', lty = 2)
```

```{r}
ggplot(q2c, aes(x = log(am_ratio))) +
  geom_histogram(bins = 100) +
  geom_vline(xintercept = 0, color = 'red', lty = 2)
```

```{r}
ggplot(q2c, aes(x = am_ratio)) +
  geom_density() +
  geom_vline(xintercept = 1, color = 'red', lty = 2)
```

```{r}
ggplot(q2c, aes(x = log(am_ratio))) +
  geom_density() +
  geom_vline(xintercept = 0, color = 'red', lty = 2)
```

<br><br>

## Q2e

Provide both ggplot code and a simple comment to describe how the distribution of `Contribution` varies by `Type of support` and `Status`.

```{r}
ggplot(climate_finance,
       aes(color = `Type of support`, x = log(Contribution))) +
  geom_density(show.legend = F) +
  facet_wrap(.~ Status)
  
```

```{r, eval = F}
ggplot(climate_finance,
       aes(color = `Type of support`, x = log(Contribution))) +
  geom_freqpoly() +
  facet_wrap(.~ Status)
```

```{r}
ggplot(climate_finance,
       aes(color = `Type of support`, x = log(Contribution))) +
  geom_freqpoly() +
  facet_wrap(.~ Status) +
  theme(legend.position = 'top')
```
