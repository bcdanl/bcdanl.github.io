---
title: "DANL 200: Introduction to Data Analytics<br>Homework Assignment 3"
author: "Byeong-Hak Choe"
editor: visual
---

```{r setup, include = F}
library(tidyverse)
library(skimr)
library(stargazer)
library(broom)
library(scales)  # scales for ggplot
library(ggthemes)  # additional ggplot themes
library(hrbrthemes) # additional ggplot themes and color pallets
library(lubridate)
library(ggridges)
theme_set(theme_minimal()) # setting the minimal theme for ggplot
# setting default chunk options
knitr::opts_chunk$set(
	eval = T,
	echo = T,
	message = FALSE,
	warning = FALSE
)
 
```

Load R packages you need for Homework Assignment 3

```{r}
library(tidyverse)
library(skimr)
library(stargazer)
library(broom)
```

# Question 1

Load the DataFrfame for Question 1.

```{r}
path <- 'https://bcdanl.github.io/data/beer_markets.csv'
beer_mkts <- read_csv(path)
```


```{r, results = 'asis', echo = F, message = F, warning = F}
rmarkdown::paged_table(beer_mkts) 
```

## Variable Description
- `hh`: an identifier of the purchasing household;
- `X_purchase_desc`: details on the purchased item;
- `quantity`: the number of items purchased;
- `brand`: Bud Light, Busch Light, Coors Light, Miller Lite, or Natural Light;
- `spent`: total dollar value of purchase;
- `beer_floz`: total volume of beer, in fluid ounces;
- `price_per_floz`: price per fl.oz. (i.e., beer spent/beer floz);
- `container`: the type of container;
- `promo`: Whether the item was promoted (coupon or otherwise);
- `market`: Scan-track market (or state if rural);
- demographic data, including gender, marital status, household income, class of work, race, education, age, the size of household, and whether or not the household has a microwave or a dishwasher.


## Q1a

In the data.frame, `beer_mkts`, keep the observations with only *'CAN'* or *'NON REFILLABLE BOTTLE'* type `container`s.

```{r}
beer_mkts <- beer_mkts %>% 
  filter(container == 'CAN' | container == 'NON REFILLABLE BOTTLE')
```

<br><br>

## Q1b

In the data.frame, `beer_mkts`, convert the *character* variable, `market`, to the *factor* variable with the first level *'BUFFALO-ROCHESTER'*.

```{r}
beer_mkts <- beer_mkts %>% 
  mutate(market = factor(market),
         market = relevel(market,
                          'BUFFALO-ROCHESTER'))
```

<br><br>

## Q1c

- Create the data.frame, `beer_mkts_NY`, that include 
  a. only the following `market`s, 
    1. BUFFALO-ROCHESTER;
    2. ALBANY;
    3. SYRACUSE;
    4. SURBURBAN NY;
    5. EXURBAN NY;
    6. URBAN NY; 
  b. only the following beer `brand`s
    1. BUD LIGHT;
    2. COORS LIGHT;
    3. MILLER LITE.

- Provide both (1) ggplot with `beer_mkts_NY` and (2) a comment to describe how the relationship between `log(price_per_floz)` and `log(beer_floz)` varies by `market` and `brand`. 

```{r}
beer_mkts_NY <- beer_mkts %>% 
  filter(market %in% c('BUFFALO-ROCHESTER',
                       'ALBANY', 'SYRACUSE',
                       'SURBURBAN NY',
                       'EXURBAN NY', 'URBAN NY') )%>% 
  filter(brand %in% c('BUD LIGHT',
                       'COORS LIGHT', 'MILLER LITE') )
```

```{r, fig.width=8, fig.height=12}
ggplot(beer_mkts_NY, aes(x = log(beer_floz),
                         y = log(price_per_floz))) +
  geom_point(alpha = .2) +
  geom_smooth(method = lm) +
  facet_grid(market ~ brand)
```

- Across the subregions, the demand for BUD LIGHT in URBAN NY seems to be the most sensitive to change in price.
- Across the subregions, the demand for BUD LIGHT in ALBANY seems to be the least sensitive to change in price.


- Across the subregions, the demand for COORS LIGHT in URBAN NY seems to be the most sensitive to change in price.
- Across the subregions, the demand for COORS LIGHT in EXURBAN NY seems to be the least sensitive to change in price.


- Across the subregions, the demand for MILLER LITE in EXURBAN NY seems to be the most sensitive to change in price.
- Across the subregions, the demand for MILLER LITE in Albany seems to be the least sensitive to change in price.

<br><br>

## Q1d

- Randomly divide the data.frame, `beer_mkts`, into training and test data.frames, `dtrain` and `dtest`, respectively.

- Make sure that you can replicate the randomization.
  -  Approximately 60% of observations in `beer_mkts` go to `dtrain.`
  - The rest of observations in `beer_mkts` go to `dtest`.

```{r}
set.seed(123)
gp <- runif(nrow(beer_mkts))
dtrain <- beer_mkts %>% 
  filter(gp < .6)
dtest <- beer_mkts %>% 
  filter(gp >= .6)
```

<br><br>

## Q1e

Use dtrain to train the linear regression model with the following formula.

```{r}
formula <- 
  log(price_per_floz) ~  
    log(beer_floz) + market + container + brand
```


- Provide the summary of the linear regression.
```{r}
model <- lm(data = dtrain, formula)
```

```{r, echo = TRUE, eval = F}
stargazer(model, 
          type = 'text', 
          keep = c('log(beer_floz)', 
                   'brand',
                   'Albany', 'NY',
                   'Syracus', "NEW YORK"
                   ))
```

```{r, echo = F, results='asis'}
stargazer(model, 
          type = 'html', 
          keep = c('log(beer_floz)', 
                   'brand',
                   'Albany', 'NY',
                   'Syracus', "NEW YORK"
                   ))
```

<br>

## Q1f

From the result in Q1e, interpret the beta estimates of the following variables.
  1. `marketALBANY`
  2. `marketEXURBAN NY`
  3. `marketRURAL NEW YORK`
  4. `marketSURBURBAN NY`
  5. `marketSYRACUSE`
  6. `marketURBAN NY`
  7. `brandBUSCH LIGHT`

```{r}
b <- tidy(model) %>% 
  filter(term %in% c('marketALBANY', 'marketEXURBAN NY', 'marketRURAL NEW YORK', 'marketSURBURBAN NY', 'marketSYRACUSE', 'marketURBAN NY', 'brandBUSCH LIGHT', 'log(beer_floz)')) %>% 
  mutate(star = ifelse(p.value <= .1, TRUE, FALSE),
         exp_b_perc = (exp(estimate) - 1) * 100 ) 
```

- All else being equal, `price_per_floz` in `ALBANY` is greater than that in `BUFFALO-ROCHESTER` by `r round(b$exp_b_perc[2],2)`% on average.

- All else being equal, `price_per_floz` in `EXURBAN NY` is greater than that in `BUFFALO-ROCHESTER` by `r round(b$exp_b_perc[3],2)`% on average.

- The beta estimate for `marketRURAL NEW YORK` is not statistically significant, so that we cannot reject the null hypothesis $\beta_{\text{marketRURAL NEW YORK}} \,=\,0$.

- All else being equal, `price_per_floz` in `SURBURBAN NY` is greater than that in `BUFFALO-ROCHESTER` by `r round(b$exp_b_perc[5],2)`% on average.

- All else being equal, `price_per_floz` in `SYRACUSE` is smaller than that in `BUFFALO-ROCHESTER` by `r round(abs(b$exp_b_perc[6]),2)`% on average.

- All else being equal, `price_per_floz` in `URBAN NY` is greater than that in `BUFFALO-ROCHESTER` by `r round(b$exp_b_perc[7],2)`% on average.

- All else being equal, `price_per_floz` for `BUSCH LIGHT` is smaller than that for `BUD LIGHT` by `r round(abs(b$exp_b_perc[8]),2)`% on average.


<br>

## Q1g
From the result in Q1e, interpret the beta estimate for `log(beer_floz)`.


- All else being equal, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs(b$estimate[1]),2)`% on average.


<br>

## Q1h
Make a prediction on the price of one 12 fl.oz bottle of beer using the `dtest` data.frame and the regression result in Q1e.

```{r}
dtest <- dtest %>% 
  mutate(pred_log = predict(model, newdata = dtest),
         pred = exp(pred_log),
         pred_12floz = 12 * pred,
         price_12floz = 12 * price_per_floz
         )
```


```{r, result = 'asis', echo = F, message = F, warning = F}
rmarkdown::paged_table(dtest %>% select(pred_log, pred, pred_12floz, price_12floz)) 
```


<br>

## Q1i
Provide both (1) ggplot and (2) a simple comment to describe how the distribution of the predicted price of one 12 fl.oz bottle of beer varies by `brand`.

```{r}
ggplot(dtest) +
  geom_histogram(aes(x = pred_12floz, fill = brand),
                 binwidth = .0125,
                 show.legend = F) +
  facet_grid(brand ~.)
```

- BUD LIGHT, COORS LIGHT, and MILLER LITE tend to be more expensive than BUSCH LIGHT and NATURAL LIGHT.

<br>

## Q1j

- Use ggplot to draw a residual plot.
- Make a simple comment on the residual plot.

```{r}
ggplot(data = dtest, aes(x = pred_log, 
                         y = log(price_per_floz) - pred_log )) +
  geom_point(color = 'grey60', alpha = .1) +
  geom_smooth(color = 'blue') +
  geom_hline(aes(yintercept = 0), color = 'red')
```


- Overall, the predictions are correct.
- The residuals bounce randomly and form a cloud roughly around the perfect prediction line, implying that the statistical assumption on errors---$\epsilon_{i}\sim N(0, \sigma^{2})$---seems to hold.

<br>
