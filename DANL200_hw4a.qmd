---
title: "DANL 200: Introduction to Data Analytics<br>Homework Assignment 4"
author: "Byeong-Hak Choe"
format:
  html:
    code-fold: false
    code-summary: "Show the code"
    code-tools: true
---

```{r setup, include = F}
library(tidyverse)
library(skimr)
library(stargazer)
library(broom)
library(scales)  # scales for ggplot
library(ggthemes)  # additional ggplot themes
library(hrbrthemes) # additional ggplot themes and color pallets
library(lubridate)
library(ggridges)
theme_set(theme_minimal()) # setting the minimal theme for ggplot
# setting default chunk options
knitr::opts_chunk$set(
	eval = T,
	echo = T,
	message = FALSE,
	warning = FALSE
)
```

Load R packages you need for Homework Assignment 4

```{r}
library(tidyverse)
library(skimr)
library(stargazer)
library(broom)
```

# Question 1

Load the DataFrfame for Question 1.

```{r}
path <- 'https://bcdanl.github.io/data/beer_markets.csv'
beer_mkts <- read_csv(path)
```


```{r, results = 'asis', echo = F, message = F, warning = F}
rmarkdown::paged_table(beer_mkts) 
```

## Variable Description
- `hh`: an identifier of the purchasing household;
- `X_purchase_desc`: details on the purchased item;
- `quantity`: the number of items purchased;
- `brand`: Bud Light, Busch Light, Coors Light, Miller Lite, or Natural Light;
- `spent`: total dollar value of purchase;
- `beer_floz`: total volume of beer, in fluid ounces;
- `price_per_floz`: price per fl.oz. (i.e., beer spent/beer floz);
- `container`: the type of container;
- `promo`: Whether the item was promoted (coupon or otherwise);
- `market`: Scan-track market (or state if rural);
- demographic data, including gender, marital status, household income, class of work, race, education, age, the size of household, and whether or not the household has a microwave or a dishwasher.


## Q1a

- In the data.frame, `beer_mkts`, keep the observations with only `'CAN'` or `'NON REFILLABLE BOTTLE'` type containers.

- Randomly divide the data.frame, `beer_mkts`, into training and test data.frames, `dtrain` and `dtest`, respectively.

- Make sure that you can replicate the randomization.
  - Approximately 60% of observations in beer_mkts go to dtrain.
  - The rest of observations in beer_mkts go to dtest.

```{r}
beer_mkts <- beer_mkts %>% 
  filter(container == 'CAN' | container == 'NON REFILLABLE BOTTLE')

set.seed(14454)
gp <- runif(nrow(beer_mkts))
dtrain <- beer_mkts %>% 
  filter(gp < .6)
dtest <- beer_mkts %>% 
  filter(gp >= .6)
```

<br><br>

## Q1b

Consider the following formulas.

```{r}
formula_1 <- 
  log(price_per_floz) ~  
        log(beer_floz) + brand + promo + market + container

formula_2 <- 
  log(price_per_floz) ~  
        log(beer_floz) * brand + promo + market + container 

formula_3 <- 
  log(price_per_floz) ~  
        log(beer_floz) * brand * promo + market + container

```

- For each of the formulas above, train the linear regression model using the `dtrain` data.frame.
  - Use `stargazer()` to summarize all the regression results in one table.

```{r}
m_1 <- lm(formula_1, data = dtrain)
m_2 <- lm(formula_2, data = dtrain)
m_3 <- lm(formula_3, data = dtrain)
```


```{r, eval = F}
stargazer( m_1, m_2, m_3, 
           type = 'text', 
           omit = c('market') ) 
```


```{r, results='asis', echo = F}
stargazer( m_1, m_2, m_3, 
           type = 'html', 
           omit = c('market') ) 
```


<br><br>

## Q1c

- Across the three models in Q1b, how is the percentage change in the price of beer sensitive to the percentage change in the volume of beer purchases for each brand? 

```{r}
b_1 <- tidy(m_1) %>% 
  filter( str_detect(term, 'beer_floz') ) %>% 
  mutate( star = ifelse(p.value <= .1, TRUE, FALSE) ) 
b_2 <- tidy(m_2) %>% 
  filter( str_detect(term, 'beer_floz') ) %>% 
  mutate( star = ifelse(p.value <= .1, TRUE, FALSE) ) 
b_3 <- tidy(m_3) %>% 
  filter( str_detect(term, 'beer_floz') ) %>% 
  mutate( star = ifelse(p.value <= .1, TRUE, FALSE) ) 
```

- Model 1
  - In the model `m_1` across all the brands, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs(b_1$estimate[1]),3)`% on average, holding other variables constant. 



- Model 2
  - For `BUD LIGHT` in the model `m_2`, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs(b_2$estimate[1]),3)`% on average, holding other variables constant. 
  - For `BUSCH LIGHT` in the model `m_2`, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs( b_2$estimate[1] + b_2$estimate[2] ),3)`% on average, holding other variables constant. 
  - For `COORS LIGHT` in the model `m_2`, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs( b_2$estimate[1]  ),3)`% on average, holding other variables constant. 
  - For `MILLER LITE` in the model `m_2`, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs( b_2$estimate[1] + b_2$estimate[4] ),3)`% on average, holding other variables constant. 
  - For `NATURAL LIGHT` in the model `m_2`, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs( b_2$estimate[1] + b_2$estimate[5] ),3)`% on average, holding other variables constant. 



- Model 3 with no `promo`
  - For `BUD LIGHT` in the model `m_3` with no `promo`, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs(b_3$estimate[1]), 2)`% on average, holding other variables constant. 
  - For `BUSCH LIGHT` in the model `m_3` with no `promo`, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs( b_3$estimate[1] + b_3$estimate[2] ),3)`% on average, holding other variables constant. 
  - For `COORS LIGHT` in the model `m_3` with no `promo`, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs( b_3$estimate[1]  ),3)`% on average, holding other variables constant. 
  - For `MILLER LITE` in the model `m_3` with no `promo`, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs( b_3$estimate[1] + b_3$estimate[4] ),3)`% on average, holding other variables constant. 
  - For `NATURAL LIGHT` in the model `m_3` with no `promo`, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs( b_3$estimate[1] ),3)`% on average, holding other variables constant. 




- Model 3 with `promo`
  - For `BUD LIGHT` in the model `m_3` with `promo`, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs(b_3$estimate[1] ), 2)`% on average, holding other variables constant. 
  - For `BUSCH LIGHT` in the model `m_3` with `promo`, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs( b_3$estimate[1] + b_3$estimate[2] ),3)`% on average, holding other variables constant. 
  - For `COORS LIGHT` in the model `m_3` with `promo`, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs( b_3$estimate[1]  ),3)`% on average, holding other variables constant. 
  - For `MILLER LITE` in the model `m_3` with `promo`, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs( b_3$estimate[1] + b_3$estimate[4] + b_3$estimate[9] ),3)`% on average, holding other variables constant. 
  - For `NATURAL LIGHT` in the model `m_3` with `promo`, one percent increase in `beer_floz` is associated with a decrease in `price_per_floz` by `r round(abs( b_3$estimate[1] + b_3$estimate[10] ),3)`% on average, holding other variables constant. 



<br><br>

## Q1d

- Consider the following data.frames:

  - (1) the observations with `brand == 'BUD LIGHT'` only in the `dtrain` data.frame;
  - (2) the observations with `brand == 'BUSCH LIGHT'` only in the `dtrain` data.frame;
  - (3) the observations with `brand == 'COORS LIGHT'` only in the `dtrain` data.frame;
  - (4) the observations with `brand == 'MILLER LITE'` only in the `dtrain` data.frame;
  - (5) the observations with `brand == 'NATURAL LIGHT'` in the `dtrain` data.frame.
  

- Consider the forumla, `formula0`:

```{r}
formula0 <- 
  log(price_per_floz) ~ log(beer_floz) 
```

- Train the linear regression model with `formula0` using each of the data.frames above.

- How is the percentage change in the price of beer sensitive to the percentage change in the volume of beer purchases for each brand? 

- Are these sensitivities the same as the ones from the linear regression model with the following formula, `formula_int`, and the data, `dtrain`?

```{r}
formula_int <- 
  log(price_per_floz) ~ log(beer_floz) * brand
```


```{r}
m_bud <- lm(formula0, data = filter(dtrain, brand == 'BUD LIGHT'))
m_busch <- lm(formula0, data = filter(dtrain, brand == 'BUSCH LIGHT'))
m_coors <- lm(formula0, data = filter(dtrain, brand == 'COORS LIGHT'))
m_miller <- lm(formula0, data = filter(dtrain, brand == 'MILLER LITE'))
m_natural <- lm(formula0, data = filter(dtrain, brand == 'NATURAL LIGHT'))

m_int <- lm(formula_int, data = dtrain)
```


```{r, eval = F}
stargazer( m_bud, m_busch, m_coors, m_miller, m_natural, m_int,
           type = 'text',
           keep = 'beer') 
```


```{r, results='asis', echo = F}
stargazer( m_bud, m_busch, m_coors, m_miller, m_natural, m_int,
           type = 'html',
           keep = 'beer') 
```

- The price sensitivities from `m_bud`, `m_busch`, `m_coors`, `m_miller`, and `m_natural` are the same as the ones from `m_int`.

<br><br>

## Q1e

- Calculate the mean squared error (MSE) for each model in Q1b.



```{r}
dtest <- dtest %>% 
  mutate(pred_1 = predict(m_1, newdata = dtest),
         pred_2 = predict(m_2, newdata = dtest),
         pred_3 = predict(m_3, newdata = dtest),
         resid_1 = log(price_per_floz) - pred_1,
         resid_2 = log(price_per_floz) - pred_2,
         resid_3 = log(price_per_floz) - pred_3
         ) 

MSE <- dtest %>% 
  summarise(mse_1 = mean( resid_1^2 ),
            mse_2 = mean( resid_2^2 ),
            mse_3 = mean( resid_3^2 ),
            rmse_1 = sqrt( mse_1 ),
            rmse_2 = sqrt( mse_2 ),
            rmse_3 = sqrt( mse_3 )
            )
```


```{r, results = 'asis', echo = F, message = F, warning = F}
rmarkdown::paged_table(MSE) 
```


- Which model do you prefer most? Why?

- I prefer model, `m_3`
  - Predictions from the model `m_3` are the most accurate. The margin is very slight though.
  - Additionally, promotion can change the consumer's price sensitivity for purchasing beers. 
  
  
- Story behind the models:
  - The beer industry is close to oligopoly, which means that each beer company has enough market power to set the price level above its competitive level of price.
  - Each beer company sets the price of a brand's beer based on the degree of consumers' loyalty, sales volume, promotion, container type, and market characteristics (as well as various consumer characteristics).
  - In particular, the degree of price sensitivities can vary by promotion status. For `MILLER LITE` and `NATURAL LIGHT`, promotion makes the inverse price elasticity (a beta coefficient for terms with `log(beer_sales)`) lower, meaning that they would consider charging lower prices with promotion to further increase sales.
  
  
  
- For your information
  - The inverse price elasticity of demand is the reciprocal of the price elasticity of demand. 
  - If consumers are relatively insensitive to price changes, and the beer company can increase prices without significantly reducing demand. 
  - Conversely, if consumers are relatively sensitive to price changes, and any increase in price would likely lead to a significant decrease in demand.



- The patterns in the residual plots are similar across the three models, so that it is hard to tell which model is the best from the residual plots.
```{r}
ggplot(data = dtest, aes(x = pred_1, 
                         y = resid_1 )) +
  geom_point(color = 'grey60', alpha = .1) +
  geom_smooth(color = 'blue') +
  geom_hline(aes(yintercept = 0), color = 'red')
```

```{r}
ggplot(data = dtest, aes(x = pred_2, 
                         y = resid_2 )) +
  geom_point(color = 'grey60', alpha = .1) +
  geom_smooth(color = 'blue') +
  geom_hline(aes(yintercept = 0), color = 'red')
```

```{r}
ggplot(data = dtest, aes(x = pred_3, 
                         y = resid_3 )) +
  geom_point(color = 'grey60', alpha = .1) +
  geom_smooth(color = 'blue') +
  geom_hline(aes(yintercept = 0), color = 'red')
```


<br>
