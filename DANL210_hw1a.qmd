---
title: "DANL 210 - Homework Assignment 1"
subtitle: "Example Answers"
author: "Byeong-Hak Choe"
editor: visual
---

# Direction

- Write a Python code to answer each question.

- Make at least some simple comment (`# ...`) in each question.

- Use your working directory with the subfolder, `data`,  so that the relative pathname of CSV files in the subfolder `data` is sufficient to import the CSV files.


# Load Libraries
- Import all the Python libraries we need here.

```{python}
import pandas as pd
```

# Question 1
- Consider the probability of survival in `titanic_1.csv`.

```{python}
titanic_1 = pd.read_csv('https://bcdanl.github.io/data/titanic_1.csv')
```


## Q1a

- Calculate the simple difference between the probability of survival when passengers are first-class and the probability of survival when they are not.


```{python}
# Get the column names of the titanic_1 dataframe
titanic_1.columns

# Count the number of passengers in each class and return the count in descending order
titanic_1[['pclass']].value_counts()

# Count the number of passengers who survived and who didn't and return the count in descending order
titanic_1[['survived']].value_counts()

# Add a new column 'd' to the titanic_1 dataframe and set all values to 0
titanic_1['d'] = 0

# For rows where the 'pclass' column is '1st class', set the value of the 'd' column to 1
titanic_1.loc[titanic_1['pclass']=='1st class', 'd'] = 1

# Add a new column 'survived_d' to the titanic_1 DataFrame and set all values to 0
titanic_1['survived_d'] = 0

# For rows where the 'survived' column is 'yes', set the value of the 'survived_d' column to 1
titanic_1.loc[titanic_1['survived']=='yes', 'survived_d'] = 1

# Compute the mean of 'survived_d' for rows where 'd' is 0
e_y0 = titanic_1.loc[titanic_1['d']==0, 'survived_d'].mean()

# Compute the mean of 'survived_d' for rows where 'd' is 1
e_y1 = titanic_1.loc[titanic_1['d']==1, 'survived_d'].mean()

# Compute the SDP (so called treatment effect) by subtracting the mean of 'survived_d' where 'd' is 0 from the mean where 'd' is 1
SDP = e_y1 - e_y0

# Return the value of SDP
SDP

```

## Q1b

- How much does the probability of survival increase for first-class passengers relative to those who are not first-class passengers?


- `SDP` tells us what would happen to the probability of survival if non-first-class passengers were first-class.
  - In other words, `SDP` means the effect of being the first-class on the probability of survival from the Titanic Disaster.


## Q1c
- Consider the probability of survival in `titanic_2.csv`.

```{python}
titanic_2 = pd.read_csv('https://bcdanl.github.io/data/titanic_2.csv')
```

- After stratifying on gender and age, what happens to the difference in the probabilities of survival between first-class passengers and non-first-class passengers.

- Explain in your own words what stratifying on gender and age did for this difference in probabilities of survival between first-class passengers and non-first-class passengers.


```{python}
# Get column names of dataframe titanic_2
titanic_2.columns

# Get count of passengers by pclass
titanic_2[['pclass']].value_counts()

# Get count of passengers who survived or not
titanic_2[['survived']].value_counts()

# Get count of passengers by gender
titanic_2[['sex']].value_counts()

# Get count of passengers by age
titanic_2[['age']].value_counts()

# Create a new column 'd' and set its value to 0 for all rows
titanic_2['d'] = 0

# Set the value of column 'd' to 1 for rows where pclass is '1st class'
titanic_2.loc[titanic_2['pclass']=='1st class', 'd'] = 1

# Create a new column 'survived_d' and set its value to 0 for all rows
titanic_2['survived_d'] = 0

# Set the value of column 'survived_d' to 1 for rows where survived is 'yes'
titanic_2.loc[titanic_2['survived']=='yes', 'survived_d'] = 1

# Create a new column 'sex_d' and set its value to 0 for all rows
titanic_2['sex_d'] = 0

# Set the value of column 'sex_d' to 1 for rows where sex is 'male'
titanic_2.loc[titanic_2['sex']=='male', 'sex_d'] = 1

# Create a new column 'AgeGroup' and set its value to 0 for all rows
titanic_2['AgeGroup'] = 0

# Set the value of column 'AgeGroup' to 1 for rows where age is greater than or equal to 18
titanic_2.loc[titanic_2['age'] >= 18, 'AgeGroup'] = 1

# Create a new column 's' and set its value to 0 for all rows
titanic_2['s'] = 0 

# Set the value of column 's' based on gender and age group
titanic_2.loc[(titanic_2.sex_d == 0) & (titanic_2.AgeGroup == 1), 's'] = 1
titanic_2.loc[(titanic_2.sex_d == 0) & (titanic_2.AgeGroup == 0), 's'] = 2
titanic_2.loc[(titanic_2.sex_d == 1) & (titanic_2.AgeGroup == 1), 's'] = 3
titanic_2.loc[(titanic_2.sex_d == 1) & (titanic_2.AgeGroup == 0), 's'] = 4

# Get the number of observations where d is 0
obs = titanic_2.loc[titanic_2.d == 0].shape[0]

# Define a function to calculate weighted average effect
def weighted_avg_effect(df):
  
  # Calculate the difference in survival rates between the treatment and control groups
    diff = ( df[ df.d == 1 ].survived_d.mean() - 
             df[ df.d == 0 ].survived_d.mean() )
  
  # Calculate the weight assigned to the treatment group
    weight = df[ df.d == 0 ].shape[0] / obs
    
  # Calculate the weighted average effect
    return diff * weight


# Apply the weighted_avg_effect function to each group in the data frame grouped by the s variable
SDP2 = titanic_2.groupby('s').apply( weighted_avg_effect )

# Calculate the weighted average effect of treatment for the entire population
WSDP = SDP2.sum()

WSDP
```

- The probability of survival for the first-class passengers can be different across gender and age groups.
  - In other words, the effect of being the first-class on the probability of survival from the Titanic Disaster can be different across genders and age groups.

- WSDP takes into account the difference in the effect of being first-class across gender and age groups by weighting.


```{python}
WSDP - SDP
```

- The probability of survival for first-class after taking into account gender and age (`WSDP`) is less than that (`SDP`) which does presumably assume that characteristics of passengers such as gender and ages is related with the probability of survival.



# Question 2

- Consider the data file, `NHL-1617.csv`.

```{python}
nhl1617 = pd.read_csv('https://bcdanl.github.io/data/NHL-1617.csv')
```



