---
title: "Python Lab 2 - EDA with pandas and seaborn"
author: "Byeong-Hak Choe"
# include-after-body: [beer_map.html, beer_map_ny.html]
---

## Load Libraries

```{python, eval = F}
import pandas as pd
import numpy as np
from skimpy import skim
import seaborn as sns
```

# Question 1

## Load `DataFrame`

```{python, eval = F}
#| warning: false
#| message: false


beer_mkt = pd.read_csv('https://bcdanl.github.io/data/beer_markets.csv')
beer_mkt.head(10)
```

-   Variable Description
    -   `hh`: An identifier of the purchasing household;
    -   `_purchase_desc`: Details on the purchased item;
    -   `quantity`: Number of items purchased;
    -   `brand`: BUD LIGHT, BUSCH LIGHT, COORS LIGHT, MILLER LITE, or NATURAL LIGHT;
    -   `spent`: Total dollar value of purchase;
    -   `beer_floz`: Total volume of beer, in fluid ounces;
    -   `price_per_floz`: Price per fl.oz. (i.e., `spent`/`beer_floz`);
    -   `container`: Type of container;
    -   `promo`: Whether the item was promoted (coupon or something else);
    -   `market`: Scan-track market (or state if rural);
    -   various demographic data, including gender, marital status, household income, class of work, race, education, age, the size of household, and whether or not the household has a microwave or a dishwasher.
-   Summarize DataFrame `beer_mkt`.

```{python, eval = F}
#| warning: false
#| message: false


skim(beer_mkt)
```

```{python, eval = F}
#| warning: false
#| message: false


beer_mkt.describe()
```

```{python, eval = F}
#| warning: false
#| message: false


beer_mkt.groupby('brand').describe()
```

## Q1a

-   Sort the DataFrame `beer_mkt` by `hh` in ascending order.

```{python}
beer_mkt = beer_mkt.sort_values('hh')
```

## Q1b

-   Find the top 5 beer markets in terms of the number of households that purchased beer.

```{python}
#| warning: false
#| message: false


# value_counts()
q1b = (
       beer_mkt[['market', 'hh']]
       .value_counts()
       .sort_index()
       .groupby('market')
       .count()
       .sort_values(ascending = False)
       )
       
# size()
q1b = (
       beer_mkt.groupby(['market', 'hh'])
       .size()
       .count(level='market')
       .sort_values(ascending = False)
       )


# adding a ranking variable to the DataFrame
q1b = pd.DataFrame(q1b, columns=['n_hh'])
q1b['ranking'] = q1b['n_hh'].rank(method = 'dense', ascending = False)
q1b = q1b.query('ranking <= 5')
```

## Q1c

-   Find the top 5 beer markets in terms of the amount of total beer consumption.

```{python}
#| warning: false
#| message: false


q1c = (
       beer_mkt
       .groupby('market')[['beer_floz']]
       .sum()
       .sort_values(by = 'beer_floz', ascending = False)
       )

# adding a ranking variable to the DataFrame
q1c['ranking'] = q1c['beer_floz'].rank(method = 'dense', ascending = False)
q1c = q1c.query('ranking <= 5')

```

## Q1d

-   Provide (1) seaborn code and (2) a simple comment to describe how the distribution of `price_per_floz` varies by `brand`.

```{python}
#| warning: false
#| message: false

sns.displot(data = beer_mkt,
            x = 'price_per_floz', bins = 200,
            hue = 'brand', # for colorful histogram
            row = 'brand')

```

## Q1e

-   Provide (1) seaborn code and (2) a simple comment to describe how the relationship between `price_per_floz` and `beer_floz` varies by `brand`.

```{python}
#| warning: false
#| message: false

sns.lmplot(data = beer_mkt,
           x = "beer_floz",
           y = "price_per_floz",
           scatter_kws = {'alpha' : 0.1},
           hue = 'brand',
           row = 'brand')

```

```{python}
#| warning: false
#| message: false

# adding log transformed variables
beer_mkt['log_beer_floz'] = np.log(beer_mkt['beer_floz'])
beer_mkt['log_price_per_floz'] = np.log(beer_mkt['price_per_floz'])


sns.lmplot(data = beer_mkt,
           x = "log_beer_floz",
           y = "log_price_per_floz",
           scatter_kws = {'alpha' : 0.1},
           hue = 'brand',
           row = 'brand')
```
