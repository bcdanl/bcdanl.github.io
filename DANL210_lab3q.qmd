---
title: "Python Lab 3 - Tidy Data"
author: "Byeong-Hak Choe"
# include-after-body: [beer_map.html, beer_map_ny.html]
editor: visual
---

## Load Libraries

```{python, eval = F}
import pandas as pd
import numpy as np
from skimpy import skim
import seaborn as sns
```

# Question 1

## Load `DataFrame`

```{python, eval = F}
#| warning: false
#| message: false
billboard = pd.read_csv('https://bcdanl.github.io/data/billboard.csv')
ny_pincp = pd.read_csv('https://bcdanl.github.io/data/NY_pinc_wide.csv')
covid = pd.read_csv('https://bcdanl.github.io/data/covid19_cases.csv')
```

<br>


## Q1a

-   Describe how the distribution of rating varies across week 1, week 2, and week 3 using the **faceted** histogram.

```{python}

```

<br>


## Q1b

-   Which artist(s) have the most number of tracks in `billboard` DataFrame?

```{python}

```

<br>


## Q1c

-   Make `ny_pincp` longer.

```{python}

```

<br>


## Q1d

-   Make a wide-form DataFrame of `covid` whose variable names are from `countriesAndTerritories` and values are from `cases`.

```{python}

```

<br>

## Q1e

-   Use the wide-form DataFrame of `covid` to find the top 10 countries for which their cases are highly correlated with USA's cases using `DataFrame.corr()`

```{python}

```

<br><br><br>

# Question 2

## Load DataFrame for Q2a and Q2b
```{python}
paidsearch = pd.read_csv('https://bcdanl.github.io/data/paidsearch.csv')
```

- Variable description
  - `dma`: an identification number of a designated market (DM) area `i` (e.g., Boston, Los Angeles)
  - `treatment_period`: 0 if date is before May 22, 2012 and 1 after.
  - `search_stays_on`: 1 if the paid-search goes off in dma `i`, 0 otherwise.
  - `revenue`: eBay's sales revenue for dma `i` and date `t`


## Q2a
Summarize the mean value of `revenue` for each group of `search_stays_on` for each `date`.


<br>


## Q2b
Calculate the log difference between mean revenues in each group of `search_stays_on`. (This is the log of the average revenue in group of `search_stays_on == 1` minus the log of the average revenue in group of `search_stays_on == 0`.)


- For example, consider the following two observations:
```{python}
# date        the daily mean vale of `revenue`   search_stays_on
# 1-Apr-12    93650.68                           0
# 1-Apr-12    120277.57                          1
```

- The log difference of daily mean revenues between the two group of `search_stays_on` for `date` `1-Apr-12` is `log(120277.57) - log(93650.68)`.


<br>



## Load DataFrame for Q2c, Q2d, and Q2e
```{python}
paid_search = pd.read_csv('https://bcdanl.github.io/data/paid_search.csv')
```

<br>

- `May22_2012`: 0 if date is before May 22, 2012; 1 otherwise.

## Q2C
Sort `paid_search` by `DM` and `May22_2012` in ascending order.

<br>



## Q2d
For each `DM`, calculate the difference between `log_revenue` before and after `May22_2012`.

<br>



## Q2e
- Consider the DataFrame from Q2d. 

- Calculate the mean value of the difference between `log_revenue` before and after `May22_2012` for each group of `no_paid_search`.

- What is the difference in the mean values?

