---
title: "DANL 310: Data Visualization and Presentation\nMidterm Exam"
author: "Byeong-Hak Choe"
---

## Loading R packages

```{r, warning=F, message=F}
library(knitr)
library(tidyverse)
library(lubridate)
library(socviz)
library(ggthemes)
library(hrbrthemes)
library(gapminder)
```

```{r setup, include = FALSE}
# library(tidyverse)
# library(knitr)
# library(kableExtra)
# library(ggthemes)
# library(ggtech)
# library(ggthemr)
# library(ggthemes)
# library(hrbrthemes)
# library(hexbin)
# library(ggforce)
# library(skimr)

knitr::opts_chunk$set(fig.width=8, fig.height=5,
                      echo = T, eval = T, warning = F, message = F)  

theme_set(theme_ipsum() +
          theme(strip.background =element_rect(fill="lightgray")))
```

<br>

# Question 1

The following data is for Question 1:

```{r}
gapminder <- gapminder
```

```{r, result = 'asis', echo = F}
rmarkdown::paged_table(gapminder) 
```

<br>

Q1a. Replicate the following ggplot.

  - Use the color `#0072B2` for dots.
  
Q1b. Make a simple comment on the visualization result.

```{r, echo = F, fig.height= 12, fig.width=8}
ggplot(data = filter(gapminder, year == 2007,
                     continent != 'Oceania'),
       aes(x = lifeExp,
           y = fct_reorder(country, lifeExp))) +
  geom_point(color = "#0072B2", size = 1.75) +
  geom_text(aes(label = lifeExp), hjust = -.25,
            size = 2) +
  facet_wrap(.~continent, scales = "free_y") +
  scale_x_continuous(
    name = NULL,
    lim = c(35, 90)
  ) +
  scale_y_discrete(name = NULL) +
  labs(title = 'Life expectancy in 2007') +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = rel(.75) ),
    plot.title = element_text(size= rel(1.5),
                              hjust = 0.5,
                              face = 'bold'),
    strip.text = element_text(size = rel(1.25),
                              face = 'bold')
  ) 
  
```


# Question 2

The following data is for Question 2:

```{r}
n_tweets_long <- read_csv(
  'https://bcdanl.github.io/data/n_tweets_long.csv')
```

```{r, result = 'asis', echo = F}
rmarkdown::paged_table(n_tweets_long) 
```

<br>

Q2a. Replicate the following ggplot.

  - The following describes the `type` values:
    - `n_ot_us`: Number of US tweets 
    - `n_ot_wrld`: Number of worldwide tweets 
    - `n_rt_lk_us`: Number of US retweets & likes
    - `n_rt_lk_wrld`: Number of worldwide retweets & likes 
  - Use the colors, `maroon` and `#428bca` properly.
  
Q2b. Make a simple comment on the visualization result.


```{r, echo = F, fig.height = 8, fig.width=8}
n_tweets_long1 <- n_tweets_long %>% 
  filter(type %in% c("n_ot_us", "n_ot_wrld") ) %>% 
  mutate(type = ifelse(type == "n_ot_us", "US", "Worldwide"))

n_tweets_long2 <- n_tweets_long %>% 
  filter(type %in% c("n_rt_lk_us", "n_rt_lk_wrld") ) %>% 
  mutate(type = ifelse(type == "n_rt_lk_us", "US", "Worldwide"))
  

p2 <- ggplot(mapping = aes(x = year, y = n)) +
  geom_col(n_tweets_long1,
           mapping = aes(fill = type), 
           position = 'dodge', alpha = .67) + 
  geom_line(n_tweets_long2, 
            mapping = aes(color = type),
            size = 1.5) + 
  geom_point(data = n_tweets_long2, 
             size = 2,
             color = 'black')  +
  scale_x_continuous(breaks = seq(2012, 2017, 1)) +
  scale_y_continuous(label = scales::comma) +
  scale_color_manual(values = c('maroon', '#428bca')) +
  scale_fill_manual(values = c('maroon', '#428bca')) +  
  guides(fill = guide_legend(reverse = TRUE,
                             # title.position = "top",
                             label.position = "bottom",
                             keywidth = 2,
                             nrow = 2,
                             order = 1),
         color = guide_legend(reverse = TRUE,
                             # title.position = "top",
                             label.position = "bottom",
                             keywidth = 2,
                             nrow = 2,
                             order = 2)) +
  labs(x = "Year", 
       y = "Number of Tweets, Retweets & Likes\n (in thousand)",
       fill = "Tweets",
       color = "Retweets and likes",
       caption = 'Source: Choe, "Social Media Campaigns, Lobbying, and Climate Change Legislation:\n Evidence from #climatechange/#globalwarming and Energy Lobbies" (2023)') + 
  theme_ipsum() +
  theme(axis.title.y = element_text(size = rel(1.5),
                                    margin = margin(t = 0, r = 20, b = 0, l = 0)),
        axis.title.x = element_text(size = rel(1.5),
                                    margin = margin(t = 10, r = 0, b = 0, l = 0)),
    axis.text.x = element_text(size = rel(1.25)),
    axis.text.y = element_text(size = rel(1.25)),
    legend.position = 'top',
    legend.title = element_text(size= rel(1),
                                face = 'bold',
                                hjust = .5),    
    legend.text = element_text(size= rel(1)),
    legend.spacing.x = unit(1.25, "cm"),
    plot.caption = element_text(size = rel(1.25),
                                hjust = .5)
    ) 

p2
```

<br><br>

# Question 3

The following data set is for Question 3:

```{r}
nyc_dog_license <- read_csv(
  'https://bcdanl.github.io/data/nyc_dog_license.csv')
nyc_zips_coord <- read_csv(
  'https://bcdanl.github.io/data/nyc_zips_coord.csv')
nyc_zips_df <- read_csv(
  'https://bcdanl.github.io/data/nyc_zips_df.csv')
```

```{r, result = 'asis', echo = F}
rmarkdown::paged_table(nyc_dog_license) 
```

```{r, result = 'asis', echo = F}
rmarkdown::paged_table(nyc_zips_coord) 
```

```{r, result = 'asis', echo = F}
rmarkdown::paged_table(nyc_zips_df) 
```

<br>

Q3a. Replicate the following ggplot.

  - You should calculate the proportion of `Pit Bull (or Mix)` for each zip code.
  - You should join data.frames properly.
  - Choose the color palette from the `viridis` scales [https://ggplot2.tidyverse.org/reference/scale_viridis.html](https://ggplot2.tidyverse.org/reference/scale_viridis.html).
  - Use `coord_map(projection = "albers", lat0 = 39, lat1 = 45)`.

Q3b. Which `zip_code` does have the highest proportion of `Pit Bull (or Mix)`?


```{r, echo = F, fig.width=8, fig.height=10}
nyc_zips_df <- nyc_zips_df %>% 
  left_join(nyc_zips_coord)


nyc_dogs <- nyc_dog_license %>%
  group_by(breed_rc) %>% 
  summarise(N = n()) %>% 
  filter(dense_rank(-N)<=5)

nyc_fb <- nyc_dog_license %>%
  group_by(zip_code, breed_rc) %>%
  tally() %>%
  mutate(freq = n / sum(n),
         pct = round(freq*100, 2)) %>%
  filter(breed_rc %in% nyc_dogs$breed_rc )


# theme_nymap <- function(base_size=9, base_family="") {
#   require(grid)
#   theme_bw(base_size=base_size, base_family=base_family) %+replace%
#     theme(axis.line=element_blank(),
#           axis.text=element_blank(),
#           axis.ticks=element_blank(),
#           axis.title=element_blank(),
#           panel.background=element_blank(),
#           panel.border=element_blank(),
#           panel.grid=element_blank(),
#           panel.spacing=unit(0, "lines"),
#           plot.background=element_blank(),
#     )
# }


fb_map <- nyc_zips_df %>% 
  left_join(nyc_fb)
# skim(fb_map$pct)

filter(fb_map, breed_rc %in% c('Pit Bull (or Mix)')) %>% 
  ggplot(mapping = aes(x = X, y = Y, 
                       fill = pct,
                       group = zip_code)) +
  geom_polygon(color = "gray80", 
               size = 0.1) +
  scale_fill_viridis_c(option = "inferno",
                       breaks = seq(0,24,2)) +
  labs(fill = "Pit Bull's Share of All Licensed Dogs (%)",
       title = "New York City's Pit Bull",
       subtitle = "By Zip Code. Based on Licensing Data") +
  theme_map() +
  theme(legend.justification = c(.5,.5),
        legend.position = 'top',
        legend.direction = "horizontal",
        legend.text = element_text(size= rel(1.25)),
        legend.title = element_text(size= rel(1.25),
                                face = 'bold',
                                hjust = .5),
        plot.title = element_text(hjust = .5,
                                  vjust = .5,
                                  face = 'bold',
                                  size = rel(2.25)),
        plot.subtitle = element_text(hjust = .5,
                                     vjust = .5,
                                     size = rel(1.25))) +
  coord_map(projection = "albers", lat0 = 39, lat1 = 45) +
  guides(fill = guide_legend(title.position = "top",
                             label.position = "bottom",
                             keywidth = 1, nrow = 1))


```


<br><br>

# Question 4 

The following data is for Question 4:

```{r}
stock <- read_csv('https://bcdanl.github.io/data/stocks2013_2023.csv')
```

```{r, result = 'asis', echo = F, message = F, warning = F}
rmarkdown::paged_table(stock) 
```

<br>

Q4a. Replicate the following ggplot.

Q4b. In 2020, which company's stock trading `Volume` does seem to be the most insensitive to a change in `Close` price?

```{r, echo = F, fig.height= 16, fig.width= 8}
stock <- stock %>% 
  mutate(year = year(Date))

p <- ggplot(data = filter(stock, year >= 2019, year <= 2022 ) , 
            aes(x = log(Volume), y = log(Close), color = company))

p + 
  geom_point(alpha = .05) +
  geom_smooth(method = lm, color = 'black') +
  facet_grid( company ~ year, scales = 'free' ) +
  labs(x = 'Volume (in log)',
       y = 'Close (in log)') +
  guides(color = "none")
```

