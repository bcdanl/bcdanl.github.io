---
title: "Quiz 1"
subtitle: Classwork 6
date: last-modified
from: markdown+emoji

execute: 
  eval: false
  echo: true
---

# Descriptive Statistics

The following provides the percentage of the correct answers for each question in Quiz 1:

```{r}
#| echo: false
#| eval: true

DT::datatable(data.frame(
  Question = c('data.frame-row',
               'nrow()',
               '>= (greater-than-or-equal-to operator)',
               '! (negation operator)',
               '& (,) (and operator)'),
  Percentage = c(61.54, 83.33, 84.62, 79.41, 72.97)
))

```

<br><br>

# Question 1. `data.frame`
In a data frame, what form does an observation take?

**Answer**: Row

- [This slide](https://bcdanl.github.io/danl-lec/danl-101-lec-07-2024-0911.html?q=tidy#/r-basics-9) in Lecture 7 explains what makes a data.frame tidy. In our course, all given data.frames are tidy.
  - Itâ€™s been a while since we discussed variable-column, observation-row, and value-cell terminologies in a tidy data.frame, but these concepts are crucial for conducting data analysis.

- In a data.frame:
  - A variable takes a coulmn
  - An observation takes a row
  - A value takes a cell

<br><br>

# Question 2. `nrow()`
```{r}
___(df)
```

- Fill in the blank (___) to calculate the number of observations in the data.frame, `df`.

**Answer**: `nrow`

```{r}
nrow(df)
```

- [This slide](https://bcdanl.github.io/danl-lec/danl-101-lec-08-2024-0913.html?q=nrow#/r-basics-5) in Lecture 8 and [a couple of class R scripts](https://github.com/search?q=repo%3Abcdanl%2F101-05-R%20nrow&type=code) explain `nrow()`.

- You might have difficulty in this question if you do not recall `nrow()`. 
  - Full credit is given to answers that imply counting observations.

<br><br>

# Question 3. `>=` (Greater-than-or-equal-to operator)
```{r}
df_filtered <- df |> filter(num __ 9)
```

- Fill in the blank (___) to keep observations, in which the value of the `num` variable is greater than or equal to 9.

**Answer**: `>=`

```{r}
df_filtered <- df |> filter(num >= 9)
```

- [This slide](https://bcdanl.github.io/danl-lec/danl-101-lec-14-2024-0930.html#/filter-observations-with-filter-4) in Lecture 14 and [a couple of class R scripts](https://github.com/search?q=repo%3Abcdanl%2F101-05-R+%3E%3D&type=code) explain this inequality operator.


<br><br>

# Question 4. `!` (Negation operator)
```{r}
non_dec &lt;- df |&gt; filter( ___(month == 12) )
```

- Fill in the blank (___) to keep observations, in which the value of the `month` variable is not equal to 12 in the data.frame `df`.

**Answer**: `!`

```{r}
non_dec <-  df |> filter( !(month == 12) )
```

- [This slide](https://bcdanl.github.io/danl-lec/danl-101-lec-14-2024-0930.html#/filter-observations-with-filter-2) in Lecture 14 and [Line 56-57 in this class R script](https://github.com/bcdanl/101-05-R/blob/ce65f726aff18f668a25b3fd99b2a8bb8d69daca/danl-101-05-2024-0930.R) explain a negation operator, `!` (not).

- A more natural way to write this line is using `!=` (not-equal operator):

```{r}
non_dec <-  df |> filter( month != 12 )
```


<br><br>



# Question 5. `&` (And operator)
```{r}
df_filtered <- df |> filter(subject == "DANL" ___ number == 101)
```

- Fill in the blank (___) to keep observations, in which the value of the `subject` variable is "DANL" and the value of the `number` variable is 101.

**Answer**: `&` (`,`)

```{r}
df_filtered <- df |> filter(subject == "DANL" & number == 101)
df_filtered <- df |> filter(subject == "DANL", number == 101)
```

- [This slide](https://bcdanl.github.io/danl-lec/danl-101-lec-14-2024-0930.html#/filter-observations-with-filter-2) and [this slide](https://bcdanl.github.io/danl-lec/danl-101-lec-14-2024-0930.html#/filter-observations-with-filter-5) in Lecture 14 explain logical operation, `&` (and).




<br><br>


# Discussion 


<font size = "5">Welcome to our Quiz 1 Discussion Board! ðŸ‘‹ </font>


This space is designed for you to engage with your classmates about the material covered in Quiz 1.

Whether you are looking to delve deeper into the content, share insights, or have questions about the content, this is the perfect place for you.

If you have any specific questions for Byeong-Hak (**@bcdanl**) or peer classmate (@GitHub-Username) regarding the Quiz 1 materials or need clarification on any points, don't hesitate to ask here. 

Let's collaborate and learn from each other!

