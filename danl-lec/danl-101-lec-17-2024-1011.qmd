---
title: Lecture 17
subtitle: Nobel Prize for Machine Learning; Midterm I Review
format:
  clean-revealjs:
    self-contained: false
    chalkboard: true
    incremental: false
    code-annotations: hover
    scrollable: false

    # logo: logo-title-slide.png
author:
  - name: Byeong-Hak Choe
    email: bchoe@geneseo.edu
    affiliations: SUNY Geneseo
date: 2024-10-07
execute: 
  eval: true
  echo: false
callout-icon: false

from: markdown+emoji
include-after-body: target-hover.html # effect.html

# bibliography: refs.bib
---

## Nobel Prize in Physics and Chemistry in 2024

The Royal Swedish Academy of Sciences has decided to award the 2024 Nobel Prize in Physics to U.S. scientist John J. Hopfield and British-Canadian Geoffrey E. Hinton for discoveries and inventions in ____________________, a field that enables computers to learn from and make predictions or decisions based on data, which paved the way for the artificial intelligence boom.



## Nobel Prize in Physics and Chemistry in 2024

:::: {.columns}
::: {.column width="50%"}

<div style="text-align: center; width: 100%; margin: auto;">
  <img src="https://bcdanl.github.io/lec_figs/nobel-2024-physics.jpeg" style="width: 90%; margin-bottom: -20px;">
  <p style="font-style: bold;"></p>
</div>

:::
::: {.column width="50%"}

<div style="text-align: center; width: 100%; margin: auto;">
  <img src="https://bcdanl.github.io/lec_figs/nobel-2024-chemistry.jpeg" style="width: 90%; margin-bottom: -20px;">
  <p style="font-style: bold;"></p>
</div>

:::
::::





## 2024 Nobel Prizes: Laying the Foundations for ML
### The Breakthroughs Behind AI’s Modern Revolution

:::{.incremental}
- Recognizes groundbreaking contributions to ML and AI
  - Hopfield and Hinton: Deep learning and neural network architecture
  - Hassabis and Jumper: AI and protein folding breakthroughs

- Why It Matters: These discoveries laid the foundation for the ML revolution we are living through today

:::

## 2024 Nobel Prizes: Laying the Foundations for ML
### Deep Learning

:::{.incremental}
- Geoffrey Hinton’s Innovations:
  - Developed backpropagation, a key algorithm for training **deep neural networks**

- Deep learning: Multi-layered networks that autonomously learn complex patterns

- Impact on AI:
  - Enabled machines to learn from data without explicit instructions
  - Core technology behind language models (like ChatGPT), image recognition, and more

:::

## 2024 Nobel Prizes: Laying the Foundations for ML
### ML Today

:::{.incremental}
- The Scale of Modern AI:
  - Deep neural networks now contain billions to trillions of parameters
  - [Hugging Face](https://huggingface.co): Open-source community for ML and AI

- Applications: Voice assistants, self-driving cars, medical diagnostics, and so on.

- Importance of Data and Computing Power:
  - The explosion in data and cloud computing has fueled rapid progress in AI
  - AI models like GPT-4 are direct descendants of Hopfield and Hinton’s early work

:::

## 2024 Nobel Prizes: Laying the Foundations for ML
###  Demis Hassabis’s Story: From Chess to AI Mastery



:::: {.columns}
::: {.column width="50%"}
<div style="text-align: center; width: 80%; margin: auto;">
  <img src="https://bcdanl.github.io/lec_figs/hassabis-chess.jpg" style="width: 90%; margin-bottom: -20px;">
  <p style="font-style: bold;"></p>
</div>


<div style="text-align: center; width: 80%; margin: auto;">
  <img src="https://bcdanl.github.io/lec_figs/hassabis-game.jpg" style="width: 90%; margin-bottom: -20px;">
  <p style="font-style: bold;"></p>
</div>
:::

::: {.column width="50%"}

- Boardgame Master Enters the Protein Olympics:
- Early Life:
  - Started playing chess at age 4, achieved master level at 13
  - Transitioned to programming and video game development as a teenager

:::
::::


## 2024 Nobel Prizes: Laying the Foundations for ML
###  Demis Hassabis’s Story: From Chess to AI Mastery

:::: {.columns}
::: {.column width="50%"}
<div style="text-align: center; width: 100%; margin: auto;">
  <img src="https://bcdanl.github.io/lec_figs/alphago.jpeg" style="width: 90%; margin-bottom: -20px;">
  <p style="font-style: bold;"></p>
</div>
:::

::: {.column width="50%"}

:::{.incremental}

- Co-founded DeepMind in 2010, a company that revolutionized AI for boardgames

- DeepMind’s Global Attention:
  - Sold to Google in 2014
  - In 2016, DeepMind’s AI defeated the world champion of Go, a breakthrough in AI’s problem-solving abilities

:::
:::
::::




## 2024 Nobel Prizes: Laying the Foundations for ML
###  Demis Hassabis’s Story: From Chess to AI Mastery

:::: {.columns}
::: {.column width="40%"}
<div style="text-align: center; width: 100%; margin: auto;">
  <img src="https://bcdanl.github.io/lec_figs/hassabis-ai.jpg" style="width: 90%; margin-bottom: -20px;">
  <p style="font-style: bold;"></p>
</div>
:::

::: {.column width="60%"}

- AI’s True Purpose for Hassabis:
  - Games were just a stepping stone to developing AI for more meaningful applications, like predicting protein structures
  
:::
::::

## 2024 Nobel Prizes: Laying the Foundations for ML
### The Future of Machine Learning

:::{.incremental}

- What’s Next?:
  - AI is rapidly evolving, expanding into areas like business, economics, climate science, healthcare, personalized medicine, and so on.
  - Challenges include transparency, ethics, and responsible AI development

- Ethical Considerations:
  - How do we ensure AI benefits humanity and minimizes harm?

- Final Thoughts:
  - As AI continues to grow, it holds the potential to solve many of humanity’s greatest challenges

:::


# Midterm Exam I Review {background-color="#1c4982"}



## Questions 6-8
For **Questions 6-8**, consider the following data.frame, `twitter_data`, displayed below:
```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
library(dplyr)

twitter_data <- data.frame(
  UserID = 1:10,
  Age = c(22, 27, 34, 19, 45, 31, 28, 23, 37, 29),  # Ratio
  Gender = c("Female", "Male", "Female", "Male", "Female", "Male", "Female", "Male", "Male", "Female"),  # Nominal
  AccountType = factor(c("Standard", "Premium", "Standard", "Premium", "Standard", "Standard", "Premium", "Standard", "Premium", "Premium"),
                       levels = c("Standard", "Premium"), ordered = TRUE),  # Ordinal
  Country = c("USA", "Canada", "USA", "UK", "Australia", "USA", "India", "Canada", "USA", "UK"),  # Nominal
  FollowersCount = c(1500, 2300, 800, 5000, 300, 1200, 4500, 600, 3500, 900),  # Ratio
  LastLoginHour = c(22.5, 14.2, 9.8, 18.3, 2.7, 12.1, 16.4, 20.0, 7.5, 23.0),  # Interval (hours since midnight)
  AccountAgeDays = c(365, 730, 180, 1095, 60, 540, 850, 275, 400, 660),  # Ratio
  SatisfactionLevel = factor(c("Very Satisfied", "Satisfied", "Neutral", "Very Satisfied", "Dissatisfied", "Satisfied", "Very Satisfied", "Neutral", "Satisfied", "Very Satisfied"),
                             levels = c("Very Dissatisfied", "Dissatisfied", "Neutral", "Satisfied", "Very Satisfied"), ordered = TRUE),  # Ordinal
  PostsPerWeek = c(5, 12, 3, 20, 1, 8, 15, 4, 18, 6),  # Ratio
  GroupsJoined = c(10, 5, 12, 7, 3, 8, 15, 4, 9, 6),  # Ratio
  IsVerified = c("Yes", "No", "No", "Yes", "No", "No", "Yes", "No", "Yes", "No")  # Nominal
)

DT::datatable(twitter_data, options = list(pageLength = 5))
```



## Question 6
What type of variable is `Country` in the dataset?

a. Nominal
b. Ordinal
c. Interval
d. Ratio

`Country`: Country of residence


## Question 7
What type of variable is `LastLoginHour` in the dataset?

a. Nominal
b. Ordinal
c. Interval
d. Ratio

`LastLoginHour`: Time of last login in hours since midnight


## Question 8
What type of variable is `SatisfactionLevel` in the dataset?

a. Nominal
b. Ordinal
c. Interval
d. Ratio

`SatisfactionLevel`: User satisfaction level




## Question 14

Which of the following R code correctly assigns the data.frame `nycflights13::airlines` to the variable `airlines_df`? (Note that `airlines_df` is simply the name of the R object and can be any valid name in R.)

a. `nycflights13::airlines <- airlines_df`
b. `airlines_df <- nycflights13::airlines`
c. `nycflights13::airlines >= airlines_df`
d. `airlines_df == nycflights13::airlines`
e. All of the above


## Question 15

Write the R code to create a new variable called `total` and assign to it the sum of 8 and 12 in R.

Answer: ______________________________________________

## Question 16

Given the data.frame `df` with variables `height` and `name`, which of the following expressions returns a vector containing the values in the `height` variable?

a. `df:height`
b. `df::height`
c. `df$height`
d. Both b and c

## Question 17

The expression `as.numeric("456")` will return the numeric value 456.

a. True
b. False

## Question 18

What is the result of the expression `(1 + 2 * 3) ^ 2` in R?

a. `36`
b. `49`
c. `81`

## Question 19

Given vectors `a <- c(2, 4, 6)` and `b <- c(1, 3, 5)`, what is the result of `a + b`?

a. `c(3, 7, 11)`
b. `c(2, 4, 6, 1, 3, 5)`
c. `c(1, 2, 3, 4, 5, 6)`
d. `Error`

## Question 20

To use the function `read_csv()` from the `readr` package, one of the packages in `tidyverse`, you first need to load the package using the R code ________.

a. `library(readr)`
b. `library(skimr)`
c. `library(tidyverse)`
d. All of the above
e. Both a and c
f. Both b and c
g. Both a and c



## Question 21

Consider the following data.frame `df0`:

```{r}
#| echo: false
#| eval: true

df0 <- data.frame(
  x = c("Na", 2, 3),
  y = c(7, NA, 9)
)

knitr::kable(df0)
```


What is the result of `mean(df0$y)`?

a. `7`
b. `NA`
c. `8`
d. `9`

## Questions 22-23

Consider the following data.frame `df` for **Questions 22-23**:

```{r}
#| echo: false
#| eval: true
df <- data.frame(
  id = 1:5,
  name = c("Anna", "Ben", "Carl", "Dana", "Ella"),
  age = c(22, 28, NA, 35, 40),
  score = c(90, 85, 95, NA, 80)
)

knitr::kable(df)
```


## Question 22

Which of the following code snippets filters observations where `score` is strictly between 85 and 95 (i.e., excluding 85 and 95)?

a. `df |> filter(score >= 85 | score <= 95)`
b. `df |> filter(score > 85 | score < 95)`
c. `df |> filter(score > 85 & score < 95)`
d. `df |> filter(score >= 85 & score <= 95)`

## Question 23

Which of the following expressions correctly keeps observations from df where the `age` variable does not have any missing values?

a. `df |> filter(is.na(age))`
b. `df |> filter(!is.na(age))`
c. `df |> filter(age == NA)`
d. `df |> filter(age != NA)`
e. Both a and c
f. Both b and d


## Question 24

Consider the following data.frame `df3`:

```{r}
#| echo: false
#| eval: true

df3 <- data.frame(
  id = c(1, 1, 2, 3, 3, 4, 5),
  value = c(15, 15, 25, 35, 35, 45, 55)
)

knitr::kable(df3)
```


Which of the following code snippets returns a data.frame of unique `id` values from `df3`?

a. `df3 |> select(id) |> distinct()`
b. `df3 |> distinct(value)`
c. `df3 |> distinct(id)`
d. Both a and c

## Question 25

Which of the following code snippets correctly renames the variable `name` to `first_name` in `df`?

a. `df |> rename(first_name = name)`
b. `df |> rename(name = first_name)`
c. `df |> rename("name" = "first_name")`
d. `df |> rename_variable(name = first_name)`

## Question 26

Which of the following code snippets correctly removes the `score` variable from `df`?

a. `df |> select(-score)`
b. `df |> select(-"score")`
c. `df |> select(!score)`
d. `df |> select(, -score)`
e. `df |> select(desc(score))`

## Question 27

Which of the following code snippets filters observations where `age` is not `NA`, then arranges them in ascending order of `age`, and then selects the `name` and `age` variables?

a. `df |> filter(!is.na(age)) |> arrange(age) |> select(name, age)`
b. `df |> select(name, age) |> arrange(age) |> filter(!is.na(age))`
c. `df |> arrange(age) |> filter(!is.na(age)) |> select(name, age)`
d. `df |> filter(is.na(age)) |> arrange(desc(age)) |> select(name, age)`
e. All of the above



## Question 28
Consider the two related data.frames, `students` and `majors`:


:::: {.columns}
::: {.column width="50%"}
- `df_1`
```{r}
#| echo: false
#| eval: true
students <- data.frame(
  student_id = c(1, 2, 4),
  name = c("Brad", "Jason", "Marcie"),
  age = c(20, 22, 21)
)

knitr::kable( students)

```
:::

::: {.column width="50%"}
- `df_2`
```{r}
#| echo: false
#| eval: true

majors <- data.frame(
  student_id = 1:3,
  major = c("Business Administration", "Economics", "Data Analytics")
)

knitr::kable( majors)

```
:::
::::


:::: {.columns}
::: {.column width="60%"}

<div style="display:block; margin:15px;"></div>

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false

students <- data.frame(
  student_id = c(1, 2, 4),
  name = c("Brad", "Jason", "Marcie"),
  age = c(20, 22, 21)
)


majors <- data.frame(
  student_id = 1:3,
  major = c("Business Administration", "Economics", "Data Analytics")
)


result_df <- majors |> left_join(students)

knitr::kable(result_df)

```
:::
::: {.column width="40%"}

<div style="display:block; margin:15px;"></div>

a. `students |> left_join(majors)`
b. `majors |> left_join(students)`
c. Both a and b
:::
::::






## Question 29
In R, what does the function `sd(x)` compute, and why can it be more useful than `var(x)`?






## Question 30
List at least four applications of data analytics in sports analytics mentioned in the lecture, and briefly describe each one.




