---
title: "DANL 200: Homework Assignment 1 - Example Answers"
date: "`r format(Sys.time(), '%B %d, %Y')`"
execute: 
  echo: true
  eval: true
  warning: false
  message: false


---
```{r}
#| include: false

library(knitr)
library(rmarkdown)
library(tidyverse)
library(skimr)
```

# Question 1. Data Analytics Survey

- Complete the following survey:
  - [https://forms.gle/Ya2HbPgHynkAp5e28](https://forms.gle/Ya2HbPgHynkAp5e28)
  

<br><br><br>

# Question 2. Working with `data.frame`

## Q2a.
- Download the CSV file, `starwars.csv`, from the Brightspace. 

- Read the data file, `starwars.csv`, as the data.frame object with the name, `starwars`, using (1) the `read_csv()` function and (2) the absolute path name of the file `starwars.csv` from your local hard disk drive in your laptop.

**Answer:**

```{r}

library(tidyverse)
path_name <- "/Users/bchoe/My Drive/suny-geneseo/teaching-materials/lecture-data/starwars.csv"
starwars <- read_csv(path_name)
```

<br>

## Variable Description for `starwars` data.frame

The following describes the variables in the `starwars` data.frame.


- `films`
List of films the character appeared in

- `name`
Name of the character

- `species`
Name of species

- `height`
Height (cm)

- `mass`
Weight (kg)

- `hair_color`, `skin_color`, `eye_color`
Hair, skin, and eye colors

- `birth_year`
Year born (BBY = Before Battle of Yavin)

- `sex`
The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).

- `gender`
The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).

- `homeworld`
Name of homeworld


<br>

## Q2b.
- Provide the R code to find how many characters are `Droid` `species`.

**Answer:**


```{r}
library(skimr)

# The following gives not only Droid but also NA
# q2a <- starwars[starwars$species == 'Droid', ]

droid <- which(starwars$species == 'Droid')
q2a <- starwars[droid,]

nrow(
  q2a
)
```

```{r}
library(skimr)

# The following gives not only Droid but also NA
# q2a <- starwars[starwars$species == 'Droid', ]

droid <- which(starwars$species == 'Droid')
q2a <- starwars[droid,]

length(unique(q2a$name))
```

<br>

## Q2c.
- Provide the R code to find which `Droid` character did appear most in the Star Wars `films`.

**Answer:**


```{r}
q2b <- q2a[ , c('name','films')]

table(q2a$name)

```


<br>

## Q2d.
- Provide the R code to find the minimum, first quartile, median, third quartile, and the maximum of `height`.

**Answer:**

```{r}
skim(starwars$height)
```

- [Statistics] Explain why the median value is different from the mean value.
  - When is the median value greater than the mean value?
  - When is the median value less than the mean value?

**Answer:**

In statistics, the median and the mean are both measures of central tendency, but they are calculated differently and can have different properties. The median is the middle value in a data set when the numbers are all arranged in order, while the mean is the average of all the numbers.

### When is the Median Greater than the Mean?

The median is likely to be greater than the mean in a data set that is "skewed to the left" or "negatively skewed." In such a data set, there are more low-value outliers pulling the mean down, while the median remains relatively unaffected.

#### Characteristics of a Left-Skewed Distribution:

1. **Long Tail on the Left**: The distribution has a long tail on the left side.
2. **Mean < Median**: The mean is less than the median.
3. **Outliers on the Left**: There are more low-value outliers.


### When is the Median Less than the Mean?

The median is likely to be less than the mean in a data set that is "skewed to the right" or "positively skewed." In such a data set, there are more large-value outliers pulling the mean up, while the median remains relatively unaffected.

#### Characteristics of a Left-Skewed Distribution:

1. **Long Tail on the Right**: The distribution has a long tail on the left side.
2. **Mean > Median**: The mean is greater than the median.
3. **Outliers on the Right**: There are more large-value outliers.


<br>

## Q2e.
- Provide the R code to find the number of unique/distinct `homeworld` values.


**Answer:**


```{r}
skim(starwars$homeworld)
length(unique(starwars$homeworld))

```


<br><br><br>

# Question 3. Data Visualization

## Q3a.
Provide the R code to install the R package, `gapminder`.

**Answer:**


```{r}
#| eval: false
install.packages("gapminder")
```

<br>

## Q3b.
Load the `gapminder` data.frame provided by the R package, `gapminder`.


**Answer:**


```{r}
library(gapminder)
gapminder <- gapminder::gapminder
# ?gapminder
```


<br>


## Variable Description for `gapminder` data.frame

- The following describe the variables in the `gapminder` data.frame.

  - `country`
  factor with 142 levels
  
  - `continent`
  factor with 5 levels
  
  - `year`
  ranges from 1952 to 2007 in increments of 5 years
  
  - `lifeExp`
  life expectancy at birth, in years
  
  - `pop`
  population
  
  - `gdpPercap`
  GDP per capita (US$, inflation-adjusted)

<br>

## Q3c.
Provide ggplot code and comments to describe the relationship between `gdpPercap` and `lifeExp`.

**Answers**

```{r}
ggplot(data = gapminder) +
  geom_point(mapping = aes(x = gdpPercap, y = lifeExp),
             alpha = .15, size = .5) 

ggplot(data = gapminder) +
  geom_point(mapping = aes(x = log(gdpPercap), y = log(lifeExp)),
             alpha = .15, size = .5) 

```

- `gdpPercap` and `lifeExp` are positively associated.

<br>

## Q3d.
Provide ggplot code and comments to describe how the relationship between `gdpPercap` and `lifeExp` varies by `continent`.

**Answers**

```{r}
ggplot(data = gapminder) +
  geom_point(mapping = aes(x = gdpPercap, y = lifeExp,
                           color = continent),
             alpha = .15, size = .5) 

ggplot(data = gapminder) +
  geom_point(mapping = aes(x = log(gdpPercap), y = log(lifeExp),
                           color = continent),
             alpha = .15, size = .5) 


ggplot(data = gapminder) +
  geom_point(mapping = aes(x = gdpPercap, y = lifeExp,
                           color = continent),
             alpha = .3, size = .5) +
  facet_wrap(. ~ continent)

ggplot(data = gapminder) +
  geom_point(mapping = aes(x = log(gdpPercap), y = log(lifeExp),
                           color = continent),
             alpha = .3, size = .5) +
  facet_wrap(. ~ continent) 


ggplot(data = gapminder,
       mapping = aes(x = log(gdpPercap), y = log(lifeExp)
                     )
       ) +
  geom_point(mapping = aes(color = continent),
            alpha = .4, size = .5) +
  geom_smooth() +
  geom_smooth(method = lm,
              color = 'red') +
  facet_grid(. ~ continent) 
```


- `gdpPercap` and `lifeExp` are positively associated.
  - This does hold across `continent`.


<br>
