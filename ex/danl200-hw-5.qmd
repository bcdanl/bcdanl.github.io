---
title: "DANL 200: Homework Assignment 5"
date: "`r format(Sys.time(), '%B %d, %Y')`"
execute: 
  echo: true
  eval: true
  warning: false
  message: false
from: markdown+emoji
---

```{r}
#| eval: true
#| include: false

library(knitr)
library(rmarkdown)
library(tidyverse)
library(skimr)
library(ggthemes)
library(hrbrthemes)

theme_set(theme_ipsum()+
          theme(strip.background =element_rect(fill="lightgray"),
                axis.title.x = 
                  element_text(
                    angle = 0,
                    size = rel(1.33),
                    margin = margin(10,0,0,0)),
                axis.title.y = 
                  element_text(
                    # angle = 0,
                    size = rel(1.33),
                    margin = margin(0,10,0,0))
                )
          )
```

- Submit the `danl200-hw5-YOUR_LAST_NAME-YOUR_FIRST_NAME.qmd` file to Brightspace for Q1a and Question 2 in Homework Assignment 5.
  - Rendering the file, `danl200-hw5-YOUR_LAST_NAME-YOUR_FIRST_NAME.qmd`, should not give any errors.

- Due is December 11, 11:59 P.M.

<br>


# Question 1. Personal Website on GitHub

## Q1a.

-   Provide a link for your GihtHub repository, `https://github.com/YOUR_GITHUB_USERNAME/YOUR_GITHUB_USERNAME.github.io`


  - Add a URL for your website (`https://YOUR_GITHUB_USERNAME.github.io/`) in the About section in your GihtHub repository webpage by clicking the setting. For example, the below shows the :
  
```{r}
#| fig-align: center
knitr::include_graphics("github-repo.png")
```



<br>

## Q1b.

-   Make sure that your GitHub repository, named `YOUR_GITHUB_USERNAME.github.io`, is set to public.

-   Update your website at `https://YOUR_GITHUB_USERNAME.github.io/index.html` to:
    -   Include links to (1) your LinkedIn page, (2) GitHub page (`https://github.com/YOUR_GITHUB_USERNAME`), and (3) a PDF file of your RÃ¨sume (`https://YOUR_GITHUB_USERNAME.github.io/YOUR_RESUME.pdf`).
    -   Offer a description of yourself, detailing your education background and professional experience.
    -   Display your own profile picture with your face, not the one shown below.

![](https://bcdanl.github.io/danl-website-template/img/profile.png)

<br>

## Q1c.
- Change the title of your blog.
  - That is, to replace `Insightful Analytics` with your own blog name.
  
  
- Remove the blog posts `Post With Code`, `Starwars`, and `Beer Markets`.


- Revise the `Welcome To My Blog` post.


- Post three different blog articles based on *data analysis* using the following three CSV files:
  1. `https://bcdanl.github.io/data/DOHMH_NYC_Restaurant_Inspection.csv`
  2. `https://bcdanl.github.io/data/spotify_all.csv`
  3. `https://bcdanl.github.io/data/beer_markets.csv`
  - Make sure that each blog post has categories and is associated with a proper image file that is displayed as a thumbnail at the list page of the blog.
  - Make sure that each blog post uses emojis properly. (E.g., :smile: :beer: :notes: :pizza:)
  - Make sure that each blog post includes its thumbnail image and at least three ggplot figures.
  - You can refer to the previous DANL 200 Homework Assignments and Exams for your blog posts.


<br><br><br>

# Question 2. NFL in 2022

- Add a blog post with your answers for Question 2 to your website (`https://YOUR_GITHUB_USERNAME.github.io/`).
  - Make sure that your blog post for Question 2 includes all the questionnaires and your answers to them.
  - Make sure that your blog post for Question 2 has a section for each sub-question (e.g., Q2a, Q2b) in Question 2, so that the Table of Contents display the section for each questionnaire.
  

- The following is the data.frame for Question 2. 

```{r}
#| echo: true
NFL2022_stuffs <- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')
```

```{r}
#| results: asis
rmarkdown::paged_table(NFL2022_stuffs)
```

- `NFL2022_stuffs` is the data.frame that contains information about NFL games in year 2022, in which the unit of observation is a single play for each drive in a NFL game.


## Variable description

- `play_id`: Numeric play identifier that when used with `game_id` and `drive` provides the unique identifier for a single play
- `game_id`: Ten digit identifier for NFL game.
- `drive`: Numeric drive number in the game.
- `week`: Season week.
- `posteam`: String abbreviation for the team with possession.
- `qtr`: Quarter of the game (5 is overtime).
- `half_seconds_remaining`: Numeric seconds remaining in the half.
- `down`: The down for the given play. 
  - Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it). 
  - If you make 10 yards then you get another set of four downs.
- `pass`: Binary indicator if the play was a pass play.
- `wp`: Estimated winning probability for the `posteam` given the current situation at the start of the given play.

<br>

## Q2a.
In data.frame, NFL2022_stuffs, remove observations for which values of `posteam` is missing.

**Answer**: 

```{r}
q2a <- NFL2022_stuffs %>% 
  filter(!is.na(posteam))
```

<br>


## Q2b.
- Summarize the mean value of `pass` for each `posteam` when all the following conditions hold:
  1. `wp` is greater than 20% and less than 75%;
  2. `down` is less than or equal to 2; and
  3. `half_seconds_remaining` is greater than 120.

**Answer**: 

```{r}
q2b <- q2a %>%
  filter(wp > .20, wp < .80, down <= 2, qtr <= 2, 
         half_seconds_remaining > 120) %>%
  group_by(posteam) %>%
  summarize(mean_pass = mean(pass), 
            plays = n()) %>%
  arrange(mean_pass)
```

<br>



## Q2c.
- Provide both (1) a ggplot code with `geom_point()` using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of `pass` for each `posteam`.
  - In the ggplot, reorder the `posteam` categories based on the mean value of `pass` in ascending or in descending order.

**Answer**: 

```{r}
#| fig-height: 9
ggplot(data = q2b,
       aes( y = reorder(posteam, mean_pass), 
            x = mean_pass)) +
  geom_point() +
  labs(y = "Team with possession",
       x = "Percentage of pass plays",
       title = "Passing stats in NFL 2022")
```

<br>



## Q2d.
- Consider the following data.frame, `NFL2022_epa`:

```{r}
#| echo: true
NFL2022_epa <- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')
```

```{r}
#| results: asis
rmarkdown::paged_table(NFL2022_epa)
```

- Variable description for `NFL2022_epa`

  - `play_id`: Numeric play identifier that when used with `game_id` and `drive` provides the unique identifier for a single play
  - `game_id`: Ten digit identifier for NFL game.
  - `drive`: Numeric drive number in the game.
  - `posteam`: String abbreviation for the team with possession.
  - `passer`: Name of the player who passed a ball to a receiver by initially taking a three-step drop and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks)
  - `receiver`: Name of the receiver.
  - `epa`: Expected points added (EPA) by the `posteam` for the given play.


- Create the data.frame, `NFL2022_stuffs_EPA`, that includes 
  1. All the variables in the data.frame, `NFL2022_stuffs`;
  2. The variables, `passer`, `receiver`, and `epa`, from the data.frame, `NFL2022_epa`.
by joining the two data.frames.

- In the resulting data.frame, `NFL2022_stuffs_EPA`, remove observations with `NA` in `passer`.

**Answer**: 

```{r}
q2d <- NFL2022_stuffs %>% 
  left_join(NFL2022_epa) %>% 
  filter(!is.na(passer))
```

<br>


<br>

## Q2e.
- Provide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of `week`ly mean value of `epa` for each of the following two passers, 
  1. `"J.Allen"`
  2. `"P.Mahomes"`

**Answer**: 
  
```{r}
q2e <- q2d %>%
  filter( str_detect(passer, "J.Allen") | 
            str_detect(passer, "P.Mahomes"))%>%
  group_by(week, passer) %>% 
  summarize(mean_epa = mean(epa, na.rm = TRUE))


ggplot( q2e, 
        aes(x = week, y = mean_epa, color = passer) ) +
  geom_line(size = 1) + geom_point(size = 2) +
  labs(x = "Week",
       y = "Mean value of expected points added (EPA)",
       color = "Passer") +
  # scale_color_tableau() +
  scale_color_fivethirtyeight() +
  theme(legend.position = 'top')
```


<br>


## Q2f.
Calculate the difference between the mean value of `epa` for `"J.Allen"` the mean value of `epa` for `"P.Mahomes"` for each value of `week`.


**Answer**: 

```{r}
q2f <- q2e %>% 
  pivot_wider(values_from = mean_epa,
              names_from = passer) %>% 
  mutate(diff_epa = J.Allen - P.Mahomes)
```



<br>

## Q2g.
- Summarize the resulting data.frame in `Q2d`, with the following four variables:

  - `posteam`: String abbreviation for the team with possession.
  - `passer`: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)
  - `mean_epa`: Mean value of `epa` in 2022 for each `passer`
  - `n_pass`: Number of observations for each `passer`


- Then find the top 10 NFL `passer`s in 2022 in terms of the mean value of `epa`, conditioning that `n_pass` must be greater than or equal to the third quantile level of `n_pass`.



**Answer**: 

```{r}
q2g <- q2d %>%
  group_by(posteam, passer) %>% 
  summarize(mean_epa = mean(epa, na.rm = TRUE),
            n_pass = n()) 
# skimr::skim(q2g) # 

q2g <- q2g %>% 
  ungroup() %>% 
  filter(n_pass > quantile(q2g$n_pass, probs = .75)) %>% 
  arrange(-mean_epa)
```


