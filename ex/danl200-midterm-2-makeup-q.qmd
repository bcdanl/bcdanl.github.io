---
title: "Fall 2023 DANL 200 Make-up Midterm Exam 2 - Questions"
# subtitle: "Version 1"
author: "Byeong-Hak Choe"
institute: "SUNY Geneseo"
date: "2023-12-01"
format: 
  html:
    code-fold: true      
    code-summary: "Show the code"

execute:
  echo: true
  eval: true
  message: false
  warning: false
  fig-width: 9
  fig-height: 5
---
```{r, include=F}
library(tidyverse)
library(skimr)
library(lubridate)
library(hrbrthemes)

knitr::opts_chunk$set(fig.width=9, fig.height=7)  

theme_set(
  theme_ipsum() +
  theme(legend.position = "top",
        legend.title = element_text(face = "bold"),
        legend.background = element_rect(size = 0.5, 
                                         linetype = 1, 
                                         color = "lightgray"),
        strip.background = element_rect(fill = "#c78ebe"),
        strip.text = element_text(size = rel(1)),
        axis.title.x = element_text(size = rel(1.5),
                                    margin = margin(7.5,0,0,0)),
        axis.title.y = element_text(size = rel(1.5),
                                    angle = 0,
                                    margin = margin(0,7.5,0,0))
                )
          )

```

# Load R packages
- Here we are loading all the R packages we need for the Midterm Exam II, so that you do not need to load the R packages in your code.
```{r, echo = T}
#| code-fold: false
library(tidyverse)
library(skimr)
```


<br><br>

# Question 1

- The following is the data frame for Question 1.

```{r, echo = T}
#| code-fold: false
brewery <- read_csv("/Users/bchoe/My Drive/suny-geneseo/teaching-materials/lecture-data/beer_reviews_cleaned.csv")
```

- The data frame `brewery` includes brewery customers' review information on American brewery's beer over the monthly time periods, ranging from August 1996 to January 2012.




## Variable description

- `brewery_name`: The name of the brewery.
- `beer_style`: The style of the beers (e.g., `Lager`, `Ale`, `Stout`).
- `beer_name`: The name of the beers (e.g., `Guinness Draught`, `Samuel Adams Summer Ale`, `Blue Moon Belgian White`)
- `beer_abv`: The alcohol by volume (ABV) percentage of the beer.
- `review_time`: The review time (monthly from `1996-08-01` to `2012-01-01`. Day value is always `01`.)
- `review_overall`: The overall rating given to the beer by the reviewer.
- `review_aroma`: The rating given for the aroma of the beer.
- `review_appearance`: The rating for the appearance of the beer.
- `review_palate`: The rating given for the palate of the beer.
- `review_taste`: The rating given for the taste of the beer.



<br>


- The following is the data.frame, `brewery`.
```{r, results = 'asis'}
rmarkdown::paged_table(brewery,
                       options = list(rows.print = 20,
                                      cols.print = 6,
                                      pages.print = 0,
                                      paged.print = F
                                      )) 
```

<br>

```{r, echo = T}
nrow(brewery)
ncol(brewery)
```

<br>

```{r, echo = T}
length(unique(brewery$brewery_name))
unique(brewery$brewery_name)[1:100]
```

<br>

```{r, echo = T}
unique(brewery$review_time)
```

<br>

<br>


```{r, echo = T}
length(unique(brewery$beer_name))
unique(brewery$beer_name)[1:100]
```

<br>

```{r, echo = T}
unique(brewery$review_overall)
unique(brewery$review_aroma)
unique(brewery$review_appearance)
unique(brewery$review_palate)
unique(brewery$review_taste)
```

<br>


## Q1a
- Provide the R code to generate the data.frame, `popular_breweries`, which include observations exclusively for the popular breweries in terms of (1) the number of beer reviews, (2) the number of distinct `beer_style`s, or (3) the number of distinct `beer_name`s, featuring the following variables:  
  - `brewery_name`: the name of the brewery
  - `mean_overall`: the mean value of `review_overall`
  - `n`: the number of beer evaluations submitted by customers of the brewery
  - `n_styles`: the number of distinct `beer_style`s
  - `n_names`: the number of distinct `beer_name`s
  - `ranking_n`: the brewery ranking based on the number of beer reviews
  - `ranking_styles`: the brewery ranking based on the number of distinct `beer_style`s
  - `ranking_names`: the brewery ranking based on the number of distinct `beer_name`s
  

- To be selected as popular breweries, a brewery must be either (1) top 100 breweries in terms of the number of beer reviews, (2) top 100 breweries in terms of the number of distinct beer styles, or (3) top 100 breweries in terms of the number of distinct beer names.

- Brewery rankings should be calculated using a method described in the following example. Imagine you are ranking the test scores of five students from highest to lowest, where the highest and lowest scores are unique. If three students share the second-highest score, they all receive a rank of 2. Due to these three students being tied for second place, the rank after 2 is not 3 but 5.


```{r}
popular_breweries <- brewery %>% 
  group_by(brewery_name) %>% 
  summarise(mean_overall = mean(review_overall, na.rm = T),
            n = n(),
            n_styles = n_distinct(beer_style),
            n_names = n_distinct(beer_name)
            ) %>% 
  mutate(ranking_n = min_rank(-n),
         ranking_styles = min_rank(-n_styles),
         ranking_names = min_rank(-n_names)
         ) %>% 
  filter(ranking_n <= 100 | 
           ranking_styles <= 100 | 
           ranking_names <= 100 
           )
```


  - The following is the first 10 observations in the data.frame, `popular_breweries`.
```{r, results = 'asis'}
rmarkdown::paged_table(popular_breweries,
                       options = list(rows.print = 10,
                                      cols.print = 8,
                                      pages.print = 0,
                                      paged.print = F
                                      )) 
```

<br><br>


## Q1b
- Provide R code to recreate the ggplot figure illustrating how the relationship between `n_styles` and `mean_overall` varies by the groups of `ranking_n`.
  - The group values---`TRUE` and `FALSE`---depends on whether it is `TRUE` that `ranking_n` is greater than 100.


<br>

```{r}
popular_breweries %>% 
  mutate(group = (ranking_n > 100)) %>% 
  # filter(ranking_styles <= 50) %>% 
  ggplot(aes(x = n_styles,
             y = mean_overall)) +
  geom_point() +
  geom_smooth(method = lm) +
  facet_wrap(.~group, scales = "free_x")
```


- The following the two ggplot figures illustrates the same relationship for `n_names`, for which you do not need to provide any R code.
```{r}
popular_breweries %>% 
  mutate(group = (ranking_n > 100)) %>% 
  # filter(ranking_names <= 50) %>% 
  ggplot(aes(x = n_names,
             y = mean_overall)) +
  geom_point() +
  geom_smooth(method = lm) +
  facet_wrap(.~group, scales = "free_x")
```



<br><br>



## Q1c.
- Provide a comment to describe how the relationship between `n_styles` and `mean_overall` varies by the groups of `ranking_n` using the visualization in Q1b.


<br><br>


## Q1d
- Provide R code to recreate the ggplot figure illustrating the monthly trend of the mean value of `review_overall` for each of the 3 most popular `beer_style`s
  - The 3 most popular `beer_style`s are chosen based on the number of beer reviews for each `beer_style`.
  - Each trend line fits into the data points for each of the 3 most popular `beer_style`s in the `brewery` data.frame.

```{r}
q1d0 <- brewery %>% 
  group_by(beer_style) %>% 
  mutate(n = n()) %>% 
  ungroup() %>% 
  mutate(ranking = dense_rank(-n)) %>% 
  filter(ranking <= 3) %>% 
  mutate(beer_style = str_c(as.character(ranking), ". ", beer_style)) %>% 
  group_by(beer_style, review_time) %>% 
  summarise(review_overall = mean(review_overall, na.rm = T)) 
  

q1d <- brewery %>% 
  group_by(beer_style) %>% 
  mutate(n = n()) %>% 
  ungroup() %>% 
  mutate(ranking = dense_rank(-n)) %>% 
  filter(ranking <= 3) %>% 
  mutate(beer_style = str_c(as.character(ranking), ". ", beer_style))


ggplot(q1d, aes(x = review_time, y = review_overall)) +
  geom_point(data = q1d0, aes(color = beer_style),
             alpha = .67) +
  geom_smooth(aes(color = beer_style), se = T) +
  scale_x_date(date_labels = '%b %Y',
               date_breaks = '6 month',
               limits = c(min(q1d$review_time), max(q1d$review_time))
  ) +
  scale_color_brewer(palette = 'Set1') +
  guides(color = guide_legend(label.position = "bottom",
                              keywidth = 5)) +
  labs(y = "Mean value of review_overall") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45),
        legend.position = 'top')
```



<br><br>
<br><br>



# Question 2

- The following is the data frame for Question 2.

```{r, echo = T}
#| code-fold: false
ny_tweets_rt <- read_csv("/Users/bchoe/My Drive/suny-geneseo/teaching-materials/lecture-data/ny_tweets_rt.csv")
```

- The data frame `ny_tweets_rt` includes information on tweets with #climatechange or #globalwarming written by Twitter users who live in New York State from the years 2012 to 2017.


## Variable description

- `id_user`:	Unique identification number for a Twitter user
- `FIPS`:	Unique identification number for a county
- `county`: A county
- `city`: A city
- `content`:	A tweet content
- `n_rt`:	The number of retweets for the tweet
- `year`: Date of year when the tweet was written.
- `month`: Date of month when the tweet was written.
- `monthly_date`: Date of year and month when the tweet was written.


- The following is the first 20 observations in `ny_tweets_rt`:
```{r, results = 'asis'}
rmarkdown::paged_table(ny_tweets_rt,
                       options = list(rows.print = 20,
                                      cols.print = 3,
                                      pages.print = 0,
                                      paged.print = F
                                      )) 
```

<br>


```{r, echo = T}
nrow(ny_tweets_rt)
ncol(ny_tweets_rt)
```

<br>

```{r, echo = T}
unique(ny_tweets_rt$county)
unique(ny_tweets_rt$city)[1:100]
```

<br>

```{r, echo = T}
min(ny_tweets_rt$monthly_date)
max(ny_tweets_rt$monthly_date)
```

<br>


## Q2a
- Provide R code to recreate the ggplot figure illustrating the distribution of the base-10 log of `n` from top 20 cities.
  - `n` is the number of tweets posted by users in a particular city.
  - Top 20 cities are selected in terms of the number of tweets.
  - Do not include the `city` value `NA`.
  
```{r}
ny_tweets_rt %>% 
  group_by(city) %>% 
  count() %>% 
  filter(!is.na(city)) %>% 
  ungroup() %>% 
  filter(dense_rank(-n) <= 20) %>% 
  ggplot(aes(y = city, x = log10(n),
             fill = city)) +
  geom_col(show.legend = F)
```



<br><br>


## Q2b
- Provide a comment to describe the the distribution of the log of `n` from top 20 cities, using the visualization in Q2a.


<br><br>



## Q2c
- Provide R code to recreate the ggplot figure illustrating the monthly trend of (1) the number of tweets and (2) the number of retweets for the tweets from the Twitter users in each of the top 4 NY counties.
  - The top 4 NY counties are selected in terms of the number of tweets written by the Twitter users.

```{r}
ny_tweets_rt %>% 
  group_by(FIPS, county, monthly_date) %>% 
  summarise(n = n(),
            n_rt = sum(n_rt)) %>% 
  group_by(FIPS) %>% 
  mutate(tot = sum(n)) %>% 
  ungroup() %>% 
  filter(dense_rank(-tot) <= 4) %>% 
  ggplot(aes(x = monthly_date, y = n)) +
  geom_col(aes(y = n_rt)) +
  geom_line(aes(color = county), show.legend = F) +
  geom_point(aes(color = county), show.legend = F, size = .75) +
  facet_wrap(.~county, scales = 'free_y', ncol = 2) +
  scale_x_date(date_labels = '%b %Y',
               date_breaks = '6 month') +
  theme(axis.text.x = element_text(angle = 45,
                                   margin = margin(7.5,0,0,0),
                                   size = rel(.85)))
```


<br><br>



## Q2d
- Create the data.frame `top20` that identifies the top 20 Twitter users who have posted over a hundred tweets featuring #climatechange or #globalwarming, ranked by their average number of retweets per tweet.
  - In the data.frame `top20`, please include the city of residence for those top 20 users.

  - The following shows the resulting data.frame:
```{r}
top20 <- ny_tweets_rt %>% 
  select(id_user, city, n_rt) %>% 
  group_by(id_user, city) %>% 
  summarise(n = n(),
            n_rt_sum = sum(n_rt)) %>% 
  filter(n > 100) %>% 
  mutate(rt_per_t = round(n_rt_sum/n,2)) %>% 
  arrange(-rt_per_t) %>% 
  head(20)

```


```{r, results = 'asis'}
rmarkdown::paged_table(top20,
                       options = list(rows.print = 20,
                                      cols.print = 5,
                                      pages.print = 0,
                                      paged.print = F
                                      )) 
```


<br><br>


## Q2e
- Provide R code to recreate the ggplot figure illustrating the monthly trend of the number of new Twitter users who mentioned #climatechange or #globalwarming in a tweet for the first time.
  - For example, if Twitter user `id_user` *3* posted their first tweet mentioning #climatechange or #globalwarming in December 2016, then `id_user` *3* should be included in the count for December 2016.

- The following is the observations from `id_user` *3* in `ny_tweets_rt`:
```{r, results = 'asis'}
rmarkdown::paged_table(ny_tweets_rt %>% select(id_user, monthly_date),
                       options = list(rows.print = 4,
                                      cols.print = 3,
                                      pages.print = 0,
                                      paged.print = F
                                      )) 
```

```{r}
ny_tweets_rt %>% 
  select(id_user, monthly_date) %>% 
  group_by(id_user) %>% 
  filter(monthly_date == min(monthly_date)) %>% 
  group_by(monthly_date) %>% 
  count() %>% 
  ggplot(aes(x = monthly_date, y = n)) +
  geom_line() +
  geom_point(size = .75) +
  labs(y = "Number of new Twitter users with #climatechange or #globalwarming") +
  scale_x_date(date_labels = '%b %Y',
               date_breaks = '6 month') +
  theme(axis.text.x = element_text(angle = 45,
                                   margin = margin(7.5,0,0,0)),
        axis.title.y = element_text(angle = 90),
        )
```
